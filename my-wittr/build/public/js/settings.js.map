{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/simple-transition/index.js","public/js/settings/TestController.js","public/js/settings/index.js","public/js/settings/mdl/textfield.js","public/js/settings/tests/WindowMessenger.js","public/js/settings/tests/index.js","public/js/settings/views/spinner.js","public/js/utils/parseHTML.js"],"names":[],"mappings":"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","file":"settings.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = function transition(el, obj, duration, easing) {\n  return new Promise(function(resolve, reject) {\n    if (obj.transform) {\n      obj['-webkit-transform'] = obj.transform;\n    }\n\n    var objKeys = Object.keys(obj);\n\n    if (duration) {\n      el.style.transitionProperty = objKeys.join();\n      if (easing) el.style.transitionTimingFunction = easing;\n      el.style.transitionDuration = duration + 's';\n      el.offsetLeft; // style recalc\n\n      el.addEventListener('transitionend', function te() {\n        el.style.transitionProperty = '';\n        el.style.transitionTimingFunction = '';\n        el.style.transitionDuration = '';\n        resolve();\n        el.removeEventListener('transitionend', te);\n      });\n    }\n    else {\n      resolve();\n    }\n\n    objKeys.forEach(function(key) {\n      el.style.setProperty(key, obj[key]);\n    });\n  });\n};\n","import MaterialTextfield from './mdl/textfield';\nimport simpleTransition from 'simple-transition';\nimport SpinnerView from './views/spinner';\nimport tests from './tests';\n\nexport default class TestController {\n  constructor(container) {\n    this._memeContainer = container.querySelector('.meme-container');\n    this._memeImgContainer = container.querySelector('.meme-img-container');\n    this._feedbackText = container.querySelector('.feedback-text');\n    this._form = container.querySelector('.test-form');\n    this._currentMemeImg = null;\n    this._spinner = new SpinnerView();\n\n    this._memeContainer.appendChild(this._spinner.container);\n\n    new MaterialTextfield(container.querySelector('.mdl-js-textfield'));\n    this._form.addEventListener('submit', e => this._onSubmit(e));\n    this._form.testId.addEventListener('input', e => this._onInput(e));\n\n  }\n\n  _onInput(event) {\n    if (!this._form.testId.value.trim()) {\n      this._removeCurrentFeedback();\n    }\n  }\n\n  _onSubmit(event) {\n    event.preventDefault();\n    const val = this._form.testId.value.trim().toLowerCase();\n    this._form.testId.blur();\n    \n    this._removeCurrentFeedback();\n    simpleTransition(this._memeContainer, {opacity: 1}, 0.3);\n    this._spinner.show(800);\n\n    if (!tests[val]) {\n      this._displayFeedback(\"Didn't recognise that test ID\", 'mistake.gif', false);\n      return;\n    }\n\n    tests[val]().then(args => {\n      this._displayFeedback(...args);\n    }).catch(err => {\n      this._displayFeedback(\"Oh dear, something went really wrong\", 'mistake.gif', false);\n      throw err;\n    });\n  }\n\n  _removeCurrentFeedback() {\n    this._feedbackText.textContent = '';\n    this._memeContainer.style.opacity = '';\n    this._spinner.hide();\n\n    if (this._currentMemeImg) {\n      URL.revokeObjectURL(this._currentMemeImg.href);\n      this._memeImgContainer.removeChild(this._currentMemeImg);\n      this._currentMemeImg = undefined;\n    }\n  }\n\n  _displayFeedback(text, url, winning) {\n    this._feedbackText.textContent = text;\n    this._spinner.hide();\n\n    if (winning) {\n      this._feedbackText.classList.remove('fail');\n    }\n    else {\n      this._feedbackText.classList.add('fail');\n    }\n\n    return fetch(`/imgs/test-memes/${url}`).then(r => r.blob()).then(blob => {\n      this._currentMemeImg = new Image();\n      // hahaha, yes, I know\n      this._currentMemeImg.src = URL.createObjectURL(blob.slice(1));\n      this._memeImgContainer.appendChild(this._currentMemeImg);\n    });\n  }\n}","import TestController from './TestController';\n\nconst settingsForm = document.querySelector('.settings-form');\n\nsettingsForm.addEventListener('change', () => {\n  fetch(settingsForm.action, {\n    method: settingsForm.method,\n    body: new FormData(settingsForm)\n  });\n});\n\nif (!self.fetch) {\n  document.querySelector('.warning').style.display = 'block';\n}\n\nnew TestController(document.querySelector('.tester'));","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Class constructor for Textfield MDL component.\n * Implements MDL component design pattern defined at:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @constructor\n * @param {HTMLElement} element The element that will be upgraded.\n */\nexport default function MaterialTextfield(element) {\n  this.element_ = element;\n  this.maxRows = this.Constant_.NO_MAX_ROWS;\n  // Initialize instance.\n  this.init();\n}\n\n/**\n * Store constants in one place so they can be updated easily.\n *\n * @enum {string | number}\n * @private\n */\nMaterialTextfield.prototype.Constant_ = {\n  NO_MAX_ROWS: -1,\n  MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n\n/**\n * Store strings for class names defined by this component that are used in\n * JavaScript. This allows us to simply change it in one place should we\n * decide to modify at a later date.\n *\n * @enum {string}\n * @private\n */\nMaterialTextfield.prototype.CssClasses_ = {\n  LABEL: 'mdl-textfield__label',\n  INPUT: 'mdl-textfield__input',\n  IS_DIRTY: 'is-dirty',\n  IS_FOCUSED: 'is-focused',\n  IS_DISABLED: 'is-disabled',\n  IS_INVALID: 'is-invalid',\n  IS_UPGRADED: 'is-upgraded'\n};\n\n/**\n * Handle input being entered.\n *\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onKeyDown_ = function(event) {\n  var currentRowCount = event.target.value.split('\\n').length;\n  if (event.keyCode === 13) {\n    if (currentRowCount >= this.maxRows) {\n      event.preventDefault();\n    }\n  }\n};\n\n/**\n * Handle focus.\n *\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onFocus_ = function(event) {\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle lost focus.\n *\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onBlur_ = function(event) {\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n\n/**\n * Handle reset event from out side.\n *\n * @param {Event} event The event that fired.\n * @private\n */\nMaterialTextfield.prototype.onReset_ = function(event) {\n  this.updateClasses_();\n};\n\n/**\n * Handle class updates.\n *\n * @private\n */\nMaterialTextfield.prototype.updateClasses_ = function() {\n  this.checkDisabled();\n  this.checkValidity();\n  this.checkDirty();\n};\n\n// Public methods.\n\n/**\n * Check the disabled state and update field accordingly.\n *\n * @public\n */\nMaterialTextfield.prototype.checkDisabled = function() {\n  if (this.input_.disabled) {\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n  }\n};\nMaterialTextfield.prototype['checkDisabled'] =\n    MaterialTextfield.prototype.checkDisabled;\n\n/**\n * Check the validity state and update field accordingly.\n *\n * @public\n */\nMaterialTextfield.prototype.checkValidity = function() {\n  if (this.input_.validity) {\n    if (this.input_.validity.valid) {\n      this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n      this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n  }\n};\nMaterialTextfield.prototype['checkValidity'] =\n    MaterialTextfield.prototype.checkValidity;\n\n/**\n * Check the dirty state and update field accordingly.\n *\n * @public\n */\nMaterialTextfield.prototype.checkDirty = function() {\n  if (this.input_.value && this.input_.value.length > 0) {\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n  } else {\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n  }\n};\nMaterialTextfield.prototype['checkDirty'] =\n    MaterialTextfield.prototype.checkDirty;\n\n/**\n * Disable text field.\n *\n * @public\n */\nMaterialTextfield.prototype.disable = function() {\n  this.input_.disabled = true;\n  this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\n/**\n * Enable text field.\n *\n * @public\n */\nMaterialTextfield.prototype.enable = function() {\n  this.input_.disabled = false;\n  this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\n/**\n * Update text field value.\n *\n * @param {string} value The value to which to set the control (optional).\n * @public\n */\nMaterialTextfield.prototype.change = function(value) {\n\n  if (value) {\n    this.input_.value = value;\n  } else {\n    this.input_.value = '';\n  }\n  this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\n/**\n * Initialize element.\n */\nMaterialTextfield.prototype.init = function() {\n\n  if (this.element_) {\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n    if (this.input_) {\n      if (this.input_.hasAttribute(\n            /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE))) {\n        this.maxRows = parseInt(this.input_.getAttribute(\n            /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE)), 10);\n        if (isNaN(this.maxRows)) {\n          this.maxRows = this.Constant_.NO_MAX_ROWS;\n        }\n      }\n\n      this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n      this.boundFocusHandler = this.onFocus_.bind(this);\n      this.boundBlurHandler = this.onBlur_.bind(this);\n      this.boundResetHandler = this.onReset_.bind(this);\n      this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n      this.input_.addEventListener('focus', this.boundFocusHandler);\n      this.input_.addEventListener('blur', this.boundBlurHandler);\n      this.input_.addEventListener('reset', this.boundResetHandler);\n\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n        // TODO: This should handle pasting multi line text.\n        // Currently doesn't.\n        this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n        this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n      }\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }\n};\n\n/**\n * Downgrade the component\n *\n * @private\n */\nMaterialTextfield.prototype.mdlDowngrade_ = function() {\n  this.input_.removeEventListener('input', this.boundUpdateClassesHandler);\n  this.input_.removeEventListener('focus', this.boundFocusHandler);\n  this.input_.removeEventListener('blur', this.boundBlurHandler);\n  this.input_.removeEventListener('reset', this.boundResetHandler);\n  if (this.boundKeyDownHandler) {\n    this.input_.removeEventListener('keydown', this.boundKeyDownHandler);\n  }\n};","export default class WindowMessenger {\n  constructor(url) {\n    this._requestId = 0;\n    \n    this._iframe = document.createElement('iframe');\n    this._iframe.className = 'hidden-tester';\n    this._ready = new Promise((resolve, reject) => {\n      const listener = e => {\n        resolve();\n        this._iframe.removeEventListener('load', listener);\n        this._iframe.removeEventListener('error', errorListener);\n      };\n      const errorListener = e => {\n        reject(Error(\"Iframe load failed\"));\n        this._iframe.removeEventListener('load', listener);\n        this._iframe.removeEventListener('error', errorListener);\n      };\n      this._iframe.addEventListener('load', listener);\n      this._iframe.addEventListener('error', errorListener);\n      this._iframe.src = url;\n    });\n    document.body.appendChild(this._iframe);\n\n    this._targetOrigin = new URL(url).origin;\n\n    this._windowListener = event => this._onMessage(event);\n    self.addEventListener('message', this._windowListener);\n\n    // message jobs awaiting response {callId: [resolve, reject]}\n    this._pending = {};\n  }\n\n  destruct() {\n    document.body.removeChild(this._iframe);\n    self.removeEventListener('message', this._windowListener);\n  }\n\n  _onMessage(event) {\n    if (event.origin != this._targetOrigin) return;\n\n    if (!event.data.id) {\n      console.log(\"Unexpected message\", event);\n      return;\n    }\n\n    var resolver = this._pending[event.data.id];\n\n    if (!resolver) {\n      console.log(\"No resolver for\", event);\n      return;\n    }\n\n    delete this._pending[event.data.id];\n\n    if (event.data.error) {\n      resolver[1](new Error(event.data.error));\n      return;\n    }\n\n    resolver[0](event.data.result);\n  }\n\n  message(message) {\n    return this._ready.then(_ => {\n      const requestId = ++this._requestId;\n      message.id = requestId;\n\n      return new Promise((resolve, reject) => {\n        this._pending[requestId] = [resolve, reject];\n        this._iframe.contentWindow.postMessage(message, this._targetOrigin);\n      });\n    });\n  }\n}\n","import WindowMessenger from './WindowMessenger';\n\nconst appOrigin = new URL(location.href);\nappOrigin.port = self.config.appPort;\nconst executorUrl = new URL('/remote?bypass-sw', appOrigin);\n\nfunction remoteEval(js) {\n  const messenger = new WindowMessenger(executorUrl);\n  let error;\n\n  if (typeof js === 'function') {\n    js = '(' + js.toString() + ')()';\n  }\n\n  return figureOutConnectionType().then(type => {\n    if (type === 'offline') return [\"Looks like the server is offline\", 'sad.gif', false];\n\n    return messenger.message({\n      eval: js\n    }).catch(err => {\n      error = err;\n    }).then(val => {\n      messenger.destruct();\n      if (error) throw error;\n      return val;\n    });\n  });\n\n}\n\nfunction figureOutConnectionType() {\n  const start = performance.now();\n\n  return Promise.race([\n    fetch(new URL('/ping', appOrigin)),\n    new Promise(r => setTimeout(r, 4000))\n  ]).then(_ => {\n    const duration = performance.now() - start;\n\n    if (duration < 3000) {\n      return 'perfect';\n    }\n    if (duration < 3500) {\n      return 'slow';\n    }\n    return 'lie-fi';\n  }, _ => {\n    return 'offline';\n  });\n}\n\nexport default {\n  demo() {\n    return Promise.resolve([\"Yep, the demo's working!\", 'demo.gif', true]);\n  },\n  offline() {\n    return figureOutConnectionType().then(type => {\n      if (type == 'offline') {\n        return [\"Yep! The server is totally dead!\", '1.gif', true];\n      }\n      return [\"Hmm, no, looks like the server is still up\", 'nope.gif', false];\n    });\n  },\n  ['lie-fi']() {\n    return figureOutConnectionType().then(type => {\n      switch(type) {\n        case \"lie-fi\":\n          return [\"Yeeeep, that's lie-fi alright.\", '2.gif', true];\n        case \"offline\":\n          return [\"Hmm, no, looks like the server is down.\", 'nope.gif', false];\n        default:\n          return [\"The server responded way too fast for lie-fi.\", 'not-quite.gif', false];\n      }\n    });\n  },\n  registered() {\n    return remoteEval(function() {\n      if (navigator.serviceWorker.controller) return [\"Service worker successfully registered!\", '3.gif', true];\n      return [\"Doesn't look like there's a service worker registered :(\", 'nope.gif', false];\n    });\n  },\n  ['sw-waiting']() {\n    return remoteEval(function() {\n      return navigator.serviceWorker.getRegistration('/').then(reg => {\n        if (!reg) return [\"Doesn't look like there's a service worker registered at all!\", 'sad.gif', false];\n        if (!reg.waiting) return [\"There's no service worker waiting\", 'nope.gif', false];\n        return [\"Yey! There's a service worker waiting!\", \"4.gif\", true];\n      });\n    });\n  },\n  ['sw-active']() {\n    return remoteEval(function() {\n      return navigator.serviceWorker.getRegistration('/').then(reg => {\n        if (!reg) return [\"Doesn't look like there's a service worker registered at all!\", 'sad.gif', false];\n        if (reg.waiting) return [\"There's still a service worker waiting\", 'nope.gif', false];\n        return [\"No service worker waiting! Yay!\", \"5.gif\", true];\n      });\n    });\n  },\n  ['html-response']() {\n    return remoteEval(function() {\n      return fetch('/').then(response => {\n        const type = response.headers.get('content-type');\n\n        if (!type || (type.toLowerCase() != 'text/html' && !type.toLowerCase().startsWith('text/html'))) {\n          return [\"The response doesn't have the 'Content-Type: text/html' header\", 'nope.gif', false];\n        }\n\n        return response.text().then(text => new DOMParser().parseFromString(text, 'text/html')).then(doc => {\n          if (doc.body.querySelector('.a-winner-is-me')) {\n            return [\"Custom HTML response found! Yay!\", \"6.gif\", true];\n          }\n          return [\"Can't find an element with class 'a-winner-is-me'\", 'nope.gif', false];\n        });\n      });\n    });\n  },\n  ['gif-response']() {\n    return remoteEval(function() {\n      return fetch('/').then(response => {\n        const type = response.headers.get('content-type');\n\n        if (!type || !type.toLowerCase().startsWith('text/html')) {\n          return [\"Looks like it isn't just URLs ending with .jpg that are being intercepted\", 'not-quite.gif', false];\n        }\n\n        return fetch('/blah.jpg').then(response => {\n          const type = response.headers.get('content-type');\n\n          if (!type || !type.toLowerCase().startsWith('image/gif')) {\n            return [\"Doesn't look like urls ending .jpg are getting a gif in response\", 'no-cry.gif', false];\n          }\n\n          return [\"Images are being intercepted!\", \"7.gif\", true];\n        })\n      });\n    })\n  },\n  ['gif-404']() {\n    return remoteEval(function() {\n      return Promise.all([\n        fetch('/'),\n        fetch('/imgs/dr-evil.gif?bypass-sw'),\n        fetch('/' + Math.random())\n      ]).then(responses => {\n        const pageType = responses[0].headers.get('content-type');\n\n        if (!pageType || !pageType.toLowerCase().startsWith('text/html')) {\n          return [\"Looks like non-404 pages are getting the gif too\", 'not-quite.gif', false];\n        }\n\n        const type = responses[2].headers.get('content-type');\n\n        if (!type || !type.toLowerCase().startsWith('image/gif')) {\n          return [\"Doesn't look like 404 responses are getting a gif in return\", 'nope.gif', false];\n        }\n\n        return Promise.all(\n          responses.slice(1).map(r => r.arrayBuffer().then(b => new Uint8Array(b)))\n        ).then(arrays => {\n          const itemsToCheck = 2000;\n          const a1 = arrays[0];\n          const a2 = arrays[1];\n\n          for (let i = 0; i < itemsToCheck; i++) {\n            if (a1[i] !== a2[i]) {\n              return [\"Doesn't look like 404 responses are getting the dr-evil gif in return\", 'not-quite.gif', false];\n            }\n          }\n          return [\"Yay! 404 pages get gifs!\", \"8.gif\", true];\n        })\n      })\n    });\n  },\n  ['install-cached']() {\n    return remoteEval(function() {\n      const expectedUrls = [\n        '/',\n        '/js/main.js',\n        '/css/main.css',\n        '/imgs/icon.png',\n        'https://fonts.gstatic.com/s/roboto/v15/2UX7WLTfW3W8TclTUvlFyQ.woff',\n        'https://fonts.gstatic.com/s/roboto/v15/d-6IYplOFocCacKzxwXSOD8E0i7KZn-EPnyo3HZu7kw.woff'\n      ].map(url => new URL(url, location).href);\n\n      return caches.has('wittr-static-v1').then(has => {\n        if (!has) return [\"Can't find a cache named wittr-static-v1\", 'nope.gif', false];\n\n        return caches.open('wittr-static-v1').then(c => c.keys()).then(reqs => {\n          const urls = reqs.map(r => r.url);\n          const allAccountedFor = expectedUrls.every(url => urls.includes(url));\n\n          if (allAccountedFor) {\n            return [\"Yay! The cache is ready to go!\", \"9.gif\", true];\n          }\n          return [\"The cache is there, but it's missing some things\", 'not-quite.gif', false];\n        });\n      })\n    });\n  },\n  ['cache-served']() {\n    return remoteEval(function() {\n      return Promise.all([\n        fetch('/'),\n        fetch('/ping').then(r => r.json()).catch(e => ({ok: false}))\n      ]).then(responses => {\n        const cachedResponse = responses[0];\n        const jsonResponse = responses[1];\n\n        if (!jsonResponse.ok) return [\"Doesn't look like non-cached requests are getting through\", 'not-quite.gif', false];\n\n        return new Promise(r => setTimeout(r, 2000)).then(_ => fetch('/')).then(response => {\n          if (cachedResponse.headers.get('Date') === response.headers.get('Date')) {\n            return [\"Yay! Cached responses are being returned!\", \"10.gif\", true];\n          }\n          return [\"Doesn't look like responses are returned from the cache\", 'nope.gif', false];\n        })\n      });\n    });\n  },\n  ['new-cache-ready']() {\n    return remoteEval(function() {\n      return Promise.all([\n        caches.has('wittr-static-v1'),\n        caches.has('wittr-static-v2')\n      ]).then(hasCaches => {\n        if (!hasCaches[0]) return [\"Looks like the v1 cache has already gone\", 'sad.gif', false];\n        if (!hasCaches[1]) return [\"Can't find the wittr-static-v2 cache\", 'sad.gif', false];\n\n        return Promise.all(\n          ['wittr-static-v1', 'wittr-static-v2'].map(name => {\n            return caches.open(name)\n              .then(c => c.match('/css/main.css'))\n              .then(r => r && r.text())\n          })\n        ).then(cssTexts => {\n          if (!cssTexts[0]) return [\"Can't find CSS in the v1 cache\", 'sad.gif', false];\n          if (!cssTexts[1]) return [\"Can't find CSS in the v2 cache\", 'sad.gif', false];\n\n          if (cssTexts[0] === cssTexts[1]) {\n            return [\"There's a new cache, but the CSS looks the same\", 'nope.gif', false];\n          }\n          return [\"Yay! The new cache is ready, but isn't disrupting current pages\", \"11.gif\", true];\n        });\n      });\n    })\n  },\n  ['new-cache-used']() {\n    return remoteEval(function() {\n      return Promise.all([\n        caches.has('wittr-static-v1'),\n        caches.has('wittr-static-v2')\n      ]).then(hasCaches => {\n        if (hasCaches[0]) return [\"Looks like the v1 cache is still there\", 'not-quite.gif', false];\n        if (!hasCaches[1]) return [\"Can't find the wittr-static-v2 cache\", 'sad.gif', false];\n\n        return Promise.all([\n          fetch('/css/main.css'),\n          new Promise(r => setTimeout(r, 2000)).then(_ => fetch('/css/main.css'))\n        ]).then(responses => {\n          if (responses[0].headers.get('Date') != responses[1].headers.get('Date')) {\n            return [\"Doesn't look like the CSS is being served from the cache\", 'mistake.gif', false];\n          }\n\n          return openIframe('/').then(iframe => {\n            const win = iframe.contentWindow;\n            const doc = win.document;\n            const bg = win.getComputedStyle(doc.querySelector('.toolbar')).backgroundColor;\n\n            if (bg == 'rgb(63, 81, 181)') {\n              return [\"Doesn't look like the header color has changed\", 'no-cry.gif', false]; \n            }\n            return [\"Yay! You safely updated the CSS!\", \"12.gif\", true];\n          });\n        })\n      })\n    });\n  },\n  ['update-notify']() {\n    return remoteEval(function() {\n      return navigator.serviceWorker.getRegistration().then(reg => {\n        if (!reg.waiting) return [\"Doesn't look like there's a waiting worker\", 'nope.gif', false];\n\n        return openIframe('/').then(iframe => {\n          const win = iframe.contentWindow;\n          const doc = win.document;\n\n          return new Promise(r => setTimeout(r, 500)).then(_ => {\n            if (doc.querySelector('.toast')) {\n              return [\"Yay! There are notifications!\", \"13.gif\", true];\n            }\n            return [\"Doesn't look like there's a notification being triggered\", 'sad.gif', false];\n          })\n        });\n      });\n    })\n  },\n  ['update-reload']() {\n    return remoteEval(function() {\n      return navigator.serviceWorker.getRegistration().then(reg => {\n        if (!reg.waiting) return [\"Doesn't look like there's a waiting worker\", 'nope.gif', false];\n\n        return openIframe('/').then(iframe => {\n          const win = iframe.contentWindow;\n          const doc = win.document;\n\n          return new Promise(resolve => {\n            setTimeout(_ => resolve([\"Didn't detect the page being reloaded :(\", 'sad.gif', false]), 8000);\n            iframe.addEventListener('load', _ => {\n              resolve([\"Yay! The page reloaded!\", \"14.gif\", true]);\n            })\n          });\n        });\n      });\n    })\n  },\n  ['serve-skeleton']() {\n    return remoteEval(function() {\n      return fetch('/').then(r => r.text()).then(text => {\n        if (text.includes('post-content')) {\n          return [\"Doesn't look like the page skeleton is being served\", 'nope.gif', false];\n        }\n\n        return fetch('https://google.com/').then(r => r.text()).catch(e => '').then(gText => {\n          if (gText == text) {\n            return [\"Looks like you're serving the skeleton for https://google.com/ too!\", 'not-quite.gif', false];\n          }\n          return [\"Yay! The page skeleton is being served!\", \"15.gif\", true];\n        });\n      });\n    });\n  },\n  ['idb-animal']() {\n    return remoteEval(function() {\n      return openDb('test-db').then(db => {\n        const tx = db.transaction('keyval');\n        return tx.objectStore('keyval').get('favoriteAnimal').then(animal => {\n          if (!animal) return [\"Can't find favoriteAnimal in keyval\", 'nope.gif', false];\n          return [\"Yay! Your favorite animal is \\\"\" + animal + \"\\\"\", \"16.gif\", true];\n        })\n      }, err => {\n        return [\"Couldn't open the test-db database at all :(\", 'sad.gif', false];\n      })\n    });\n  },\n  ['idb-age']() {\n    return remoteEval(function() {\n      return openDb('test-db').then(db => {\n        if (!Array.from(db.objectStoreNames).includes('people')) {\n          return [\"Can't find the 'people' objectStore\", 'mistake.gif', false]; \n        }\n\n        const tx = db.transaction('people');\n        const store = tx.objectStore('people');\n\n        if (!Array.from(store.indexNames).includes('age')) {\n          return [\"Can't find the 'age' index in the 'people' objectStore\", 'sad.gif', false];\n        }\n\n        const index = store.index('age');\n\n        if (index.keyPath == 'age') {\n          return [\"Yay! The age index is working\", \"17.gif\", true];\n        }\n\n        return [\"The age index isn't indexed by age\", 'nope.gif', false];\n      }, err => {\n        return [\"Couldn't open the test-db database at all :(\", 'sad.gif', false];\n      })\n    });\n  },\n  ['idb-store']() {\n    return remoteEval(function() {\n      return openDb('wittr').then(db => {\n        if (!Array.from(db.objectStoreNames).includes('wittrs')) {\n          return [\"There isn't a 'wittrs' objectStore\", 'sad.gif', false];\n        }\n\n        const tx = db.transaction('wittrs');\n        const store = tx.objectStore('wittrs');\n\n        if (store.keyPath != 'id') {\n          return [\"'wittrs' objectStore doesn't use 'id' as its primary key\", 'nope.gif', false];\n        }\n\n        if (!Array.from(store.indexNames).includes('by-date')) {\n          return [\"There isn't a 'by-date' index on the 'wittrs' objectStore\", 'nope.gif', false];\n        }\n\n        const index = store.index('by-date');\n\n        if (index.keyPath != 'time') {\n          return [\"The 'by-date' index isn't using 'time' as its key\", 'nope.gif', false];\n        }\n\n        return store.getAll().then(messages => {\n          if (!messages.length) {\n            return [\"The objectStore is there, but it's empty\", 'sad.gif', false];\n          }\n\n          const looksMessagey = messages.every(message => {\n            return message.id && message.avatar && message.name && message.time && message.body;\n          });\n\n          if (looksMessagey) {\n            return [\"The database is set up and populated!\", \"18.gif\", true];\n          }\n\n          return [\"Looks like some incorrect data is in the database\", 'not-quite.gif', false];\n        });\n      }, () => {\n        return [\"Couldn't open the 'wittr' database at all :(\", 'sad.gif', false];\n      });\n    });\n  },\n  ['idb-show']() {\n    return remoteEval(function() {\n      return openDb('wittr').then(db => {\n        return openIframe('/?no-socket').then(iframe => {\n          const win = iframe.contentWindow;\n          const doc = win.document;\n\n          return new Promise(r => setTimeout(r, 500)).then(() => {\n            const times = Array.from(doc.querySelectorAll('.post-content time'));\n            if (!times.length) return [\"Page looks empty without the web socket\", 'nope.gif', false];\n\n            const inOrder = times.map(t => new Date(t.getAttribute('datetime'))).every((time, i, arr) => {\n              const nextTime = arr[i+1];\n              if (!nextTime) return true;\n              return time >= nextTime;\n            });\n\n            if (!inOrder) return [\"So close! But the newest post should appear at the top\", 'not-quite.gif', false];\n            return [\"Page populated from IDB!\", \"19.gif\", true];\n          });\n        });\n      }, () => {\n        return [\"Couldn't open the 'wittr' database at all :(\", 'sad.gif', false];\n      });\n    });\n  },\n  ['idb-clean']() {\n    return remoteEval(function() {\n      return openDb('wittr').then(db => {\n        const tx = db.transaction('wittrs');\n        const store = tx.objectStore('wittrs');\n\n        return store.count().then(num => {\n          if (num > 30) {\n            return [\"There are more than 30 items in the store\", 'nope.gif', false];\n          }\n\n          if (num < 30) {\n            return [\"There are less than 30 items in the store, so it isn't clear if this is working\", 'not-quite.gif', false];\n          }\n\n          return [\"Looks like the database is being cleaned!\", \"20.gif\", true];\n        });\n      }, () => {\n        return [\"Couldn't open the 'wittr' database at all :(\", 'sad.gif', false];\n      });\n    });\n  },\n  ['cache-photos']() {\n    return remoteEval(function() {\n      return caches.has('wittr-content-imgs').then(hasCache => {\n        if (!hasCache) return [\"There isn't a 'wittr-content-imgs' cache\", 'sad.gif', false];\n\n        // clear cache\n        return caches.delete('wittr-content-imgs').then(() => {\n          const imageUrlSmall = '/photos/4-3087-2918949798-865f134ef3-320px.jpg';\n          const imageUrlMedium = '/photos/4-3087-2918949798-865f134ef3-640px.jpg';\n\n          return fetch(imageUrlMedium).then(medResponse => {\n            return new Promise(r => setTimeout(r, 2000))\n              .then(() => fetch(imageUrlMedium)).then(anotherMedResponse => {\n                if (medResponse.headers.get('Date') != anotherMedResponse.headers.get('Date')) {\n                  return [\"Doesn't look like images are being returned from the cache\", 'nope.gif', false];\n                }\n\n                return fetch(imageUrlSmall).then(smallResponse => {\n                  return Promise.all([smallResponse.blob(), medResponse.blob()]);\n                }).then(blobs => {\n                  if (blobs[0].size != blobs[1].size) {\n                    return [\"The originally cached image isn't being returned for different sizes\", 'nope.gif', false];\n                  }\n                  return [\"Photos are being cached and served correctly!\", \"21.gif\", true];\n                });\n              });\n          });\n        });\n      });\n    });\n  },\n  ['cache-clean']() {\n    return remoteEval(function() {\n      return caches.open('wittr-content-imgs').then(cache => {\n        const imageUrlMedium = '/photos/4-3087-2918949798-865f134ef3-640px.jpg';\n\n        return fetch(imageUrlMedium).then(r => r.blob()).then(() => new Promise(r => setTimeout(r, 500))).then(() => {\n          return cache.match('/photos/4-3087-2918949798-865f134ef3').then(response => {\n            if (!response) return [\"Photos aren't appearing in the cache where we'd expect\", 'not-quite.gif', false];\n\n            const start = Date.now();\n\n            return Promise.resolve().then(function checkCache() {\n              if (Date.now() - start > 8000) {\n                return [\"The image cache doesn't seem to be getting cleaned\", 'nope.gif', false]; \n              }\n\n              return cache.match('/photos/4-3087-2918949798-865f134ef3').then(response => {\n                if (!response) {\n                  return [\"Yay! The image cache is being cleaned!\", '22.gif', true];\n                }\n                return new Promise(r => setTimeout(r, 100)).then(checkCache);\n              });\n            });\n          });\n        });\n      });\n    });\n  },\n  ['cache-avatars']() {\n    return remoteEval(function() {\n      return caches.delete('wittr-content-imgs').then(() => {\n        const imageUrlSmall = '/avatars/marc-1x.jpg';\n        const imageUrlMedium = '/avatars/marc-2x.jpg';\n\n        return fetch(imageUrlSmall).then(smallResponse => {\n          return new Promise(r => setTimeout(r, 2000))\n            .then(() => fetch(imageUrlMedium)).then(medResponse => {\n              if (smallResponse.headers.get('Date') != medResponse.headers.get('Date')) {\n                return [\"Doesn't look like avatars are being returned from the cache, even if the request is for a different size\", 'nope.gif', false];\n              }\n\n              return new Promise(r => setTimeout(r, 2000)).then(() => fetch(imageUrlMedium)).then(anotherMedResponse => {\n                if (medResponse.headers.get('Date') == anotherMedResponse.headers.get('Date')) {\n                  return [\"Doesn't look like avatars are being updated after being returned from the cache\", 'nope.gif', false];\n                }\n                return [\"Avatars are being cached, served and updated correctly!\", \"23.gif\", true];\n              });\n            });\n        });\n      });\n    });\n  }\n};","import parseHTML from '../../utils/parseHTML';\n\nexport default class Spinner {\n  constructor() {\n    this.container = parseHTML(\n      '<div class=\"spinner\">' +\n        '<div class=\"spinner-container\">' +\n          '<div class=\"spinner-layer\">' +\n            '<div class=\"circle-clipper left\">' +\n              '<div class=\"circle\"></div>' +\n            '</div>' +\n            '<div class=\"gap-patch\">' +\n              '<div class=\"circle\"></div>' +\n            '</div>' +\n            '<div class=\"circle-clipper right\">' +\n              '<div class=\"circle\"></div>' +\n            '</div>' +\n          '</div>' +\n        '</div>' +\n      '</div>' +\n    '').firstChild;\n\n    this._showTimeout = null;\n    this.container.style.display = 'none';\n\n    var animEndListener = event => {\n      if (event.target == this.container) {\n        this.container.style.display = 'none';\n      }\n    };\n\n    this.container.addEventListener('webkitAnimationEnd', animEndListener);\n    this.container.addEventListener('animationend', animEndListener);\n  }\n\n  show(delay = 300) {\n    clearTimeout(this._showTimeout);\n    this.container.style.display = 'none';\n    this.container.classList.remove('cooldown');\n    this._showTimeout = setTimeout(_ => {\n      this.container.style.display = '';\n    }, delay);\n  }\n\n  hide() {\n    clearTimeout(this._showTimeout);\n    this.container.classList.add('cooldown');\n  }\n}\n","var contextRange = document.createRange();\ncontextRange.setStart(document.body, 0);\n\nexport default function strToEls(str) {\n  return contextRange.createContextualFragment(str);\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvc2ltcGxlLXRyYW5zaXRpb24vaW5kZXguanMiLCIvVXNlcnMvSi9TaWRlUHJvamVjdHMvZ29vZ2xlLXdlYi1zcGVjaWFsaXN0L3dpdHRyL3B1YmxpYy9qcy9zZXR0aW5ncy9UZXN0Q29udHJvbGxlci5qcyIsIi9Vc2Vycy9KL1NpZGVQcm9qZWN0cy9nb29nbGUtd2ViLXNwZWNpYWxpc3Qvd2l0dHIvcHVibGljL2pzL3NldHRpbmdzL2luZGV4LmpzIiwiL1VzZXJzL0ovU2lkZVByb2plY3RzL2dvb2dsZS13ZWItc3BlY2lhbGlzdC93aXR0ci9wdWJsaWMvanMvc2V0dGluZ3MvbWRsL3RleHRmaWVsZC5qcyIsIi9Vc2Vycy9KL1NpZGVQcm9qZWN0cy9nb29nbGUtd2ViLXNwZWNpYWxpc3Qvd2l0dHIvcHVibGljL2pzL3NldHRpbmdzL3Rlc3RzL1dpbmRvd01lc3Nlbmdlci5qcyIsIi9Vc2Vycy9KL1NpZGVQcm9qZWN0cy9nb29nbGUtd2ViLXNwZWNpYWxpc3Qvd2l0dHIvcHVibGljL2pzL3NldHRpbmdzL3Rlc3RzL2luZGV4LmpzIiwiL1VzZXJzL0ovU2lkZVByb2plY3RzL2dvb2dsZS13ZWItc3BlY2lhbGlzdC93aXR0ci9wdWJsaWMvanMvc2V0dGluZ3Mvdmlld3Mvc3Bpbm5lci5qcyIsIi9Vc2Vycy9KL1NpZGVQcm9qZWN0cy9nb29nbGUtd2ViLXNwZWNpYWxpc3Qvd2l0dHIvcHVibGljL2pzL3V0aWxzL3BhcnNlSFRNTC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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Q1g7OztXQUVHLGdCQUFHO0FBQ0wsa0JBQVksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDaEMsVUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQzFDOzs7U0E3Q2tCLE9BQU87OztxQkFBUCxPQUFPOzs7Ozs7Ozs7cUJDQ0osUUFBUTtBQUhoQyxJQUFJLFlBQVksR0FBRyxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDMUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDOztBQUV6QixTQUFTLFFBQVEsQ0FBQyxHQUFHLEVBQUU7QUFDcEMsU0FBTyxZQUFZLENBQUMsd0JBQXdCLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDbkQiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2l0aW9uKGVsLCBvYmosIGR1cmF0aW9uLCBlYXNpbmcpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGlmIChvYmoudHJhbnNmb3JtKSB7XG4gICAgICBvYmpbJy13ZWJraXQtdHJhbnNmb3JtJ10gPSBvYmoudHJhbnNmb3JtO1xuICAgIH1cblxuICAgIHZhciBvYmpLZXlzID0gT2JqZWN0LmtleXMob2JqKTtcblxuICAgIGlmIChkdXJhdGlvbikge1xuICAgICAgZWwuc3R5bGUudHJhbnNpdGlvblByb3BlcnR5ID0gb2JqS2V5cy5qb2luKCk7XG4gICAgICBpZiAoZWFzaW5nKSBlbC5zdHlsZS50cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gPSBlYXNpbmc7XG4gICAgICBlbC5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBkdXJhdGlvbiArICdzJztcbiAgICAgIGVsLm9mZnNldExlZnQ7IC8vIHN0eWxlIHJlY2FsY1xuXG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZnVuY3Rpb24gdGUoKSB7XG4gICAgICAgIGVsLnN0eWxlLnRyYW5zaXRpb25Qcm9wZXJ0eSA9ICcnO1xuICAgICAgICBlbC5zdHlsZS50cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gPSAnJztcbiAgICAgICAgZWwuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gJyc7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHRlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHJlc29sdmUoKTtcbiAgICB9XG5cbiAgICBvYmpLZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICBlbC5zdHlsZS5zZXRQcm9wZXJ0eShrZXksIG9ialtrZXldKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuIiwiaW1wb3J0IE1hdGVyaWFsVGV4dGZpZWxkIGZyb20gJy4vbWRsL3RleHRmaWVsZCc7XG5pbXBvcnQgc2ltcGxlVHJhbnNpdGlvbiBmcm9tICdzaW1wbGUtdHJhbnNpdGlvbic7XG5pbXBvcnQgU3Bpbm5lclZpZXcgZnJvbSAnLi92aWV3cy9zcGlubmVyJztcbmltcG9ydCB0ZXN0cyBmcm9tICcuL3Rlc3RzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVzdENvbnRyb2xsZXIge1xuICBjb25zdHJ1Y3Rvcihjb250YWluZXIpIHtcbiAgICB0aGlzLl9tZW1lQ29udGFpbmVyID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5tZW1lLWNvbnRhaW5lcicpO1xuICAgIHRoaXMuX21lbWVJbWdDb250YWluZXIgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLm1lbWUtaW1nLWNvbnRhaW5lcicpO1xuICAgIHRoaXMuX2ZlZWRiYWNrVGV4dCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuZmVlZGJhY2stdGV4dCcpO1xuICAgIHRoaXMuX2Zvcm0gPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnRlc3QtZm9ybScpO1xuICAgIHRoaXMuX2N1cnJlbnRNZW1lSW1nID0gbnVsbDtcbiAgICB0aGlzLl9zcGlubmVyID0gbmV3IFNwaW5uZXJWaWV3KCk7XG5cbiAgICB0aGlzLl9tZW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuX3NwaW5uZXIuY29udGFpbmVyKTtcblxuICAgIG5ldyBNYXRlcmlhbFRleHRmaWVsZChjb250YWluZXIucXVlcnlTZWxlY3RvcignLm1kbC1qcy10ZXh0ZmllbGQnKSk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBlID0+IHRoaXMuX29uU3VibWl0KGUpKTtcbiAgICB0aGlzLl9mb3JtLnRlc3RJZC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGUgPT4gdGhpcy5fb25JbnB1dChlKSk7XG5cbiAgfVxuXG4gIF9vbklucHV0KGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLl9mb3JtLnRlc3RJZC52YWx1ZS50cmltKCkpIHtcbiAgICAgIHRoaXMuX3JlbW92ZUN1cnJlbnRGZWVkYmFjaygpO1xuICAgIH1cbiAgfVxuXG4gIF9vblN1Ym1pdChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdmFsID0gdGhpcy5fZm9ybS50ZXN0SWQudmFsdWUudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgdGhpcy5fZm9ybS50ZXN0SWQuYmx1cigpO1xuICAgIFxuICAgIHRoaXMuX3JlbW92ZUN1cnJlbnRGZWVkYmFjaygpO1xuICAgIHNpbXBsZVRyYW5zaXRpb24odGhpcy5fbWVtZUNvbnRhaW5lciwge29wYWNpdHk6IDF9LCAwLjMpO1xuICAgIHRoaXMuX3NwaW5uZXIuc2hvdyg4MDApO1xuXG4gICAgaWYgKCF0ZXN0c1t2YWxdKSB7XG4gICAgICB0aGlzLl9kaXNwbGF5RmVlZGJhY2soXCJEaWRuJ3QgcmVjb2duaXNlIHRoYXQgdGVzdCBJRFwiLCAnbWlzdGFrZS5naWYnLCBmYWxzZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGVzdHNbdmFsXSgpLnRoZW4oYXJncyA9PiB7XG4gICAgICB0aGlzLl9kaXNwbGF5RmVlZGJhY2soLi4uYXJncyk7XG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgIHRoaXMuX2Rpc3BsYXlGZWVkYmFjayhcIk9oIGRlYXIsIHNvbWV0aGluZyB3ZW50IHJlYWxseSB3cm9uZ1wiLCAnbWlzdGFrZS5naWYnLCBmYWxzZSk7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfSk7XG4gIH1cblxuICBfcmVtb3ZlQ3VycmVudEZlZWRiYWNrKCkge1xuICAgIHRoaXMuX2ZlZWRiYWNrVGV4dC50ZXh0Q29udGVudCA9ICcnO1xuICAgIHRoaXMuX21lbWVDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICcnO1xuICAgIHRoaXMuX3NwaW5uZXIuaGlkZSgpO1xuXG4gICAgaWYgKHRoaXMuX2N1cnJlbnRNZW1lSW1nKSB7XG4gICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHRoaXMuX2N1cnJlbnRNZW1lSW1nLmhyZWYpO1xuICAgICAgdGhpcy5fbWVtZUltZ0NvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLl9jdXJyZW50TWVtZUltZyk7XG4gICAgICB0aGlzLl9jdXJyZW50TWVtZUltZyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBfZGlzcGxheUZlZWRiYWNrKHRleHQsIHVybCwgd2lubmluZykge1xuICAgIHRoaXMuX2ZlZWRiYWNrVGV4dC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgdGhpcy5fc3Bpbm5lci5oaWRlKCk7XG5cbiAgICBpZiAod2lubmluZykge1xuICAgICAgdGhpcy5fZmVlZGJhY2tUZXh0LmNsYXNzTGlzdC5yZW1vdmUoJ2ZhaWwnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLl9mZWVkYmFja1RleHQuY2xhc3NMaXN0LmFkZCgnZmFpbCcpO1xuICAgIH1cblxuICAgIHJldHVybiBmZXRjaChgL2ltZ3MvdGVzdC1tZW1lcy8ke3VybH1gKS50aGVuKHIgPT4gci5ibG9iKCkpLnRoZW4oYmxvYiA9PiB7XG4gICAgICB0aGlzLl9jdXJyZW50TWVtZUltZyA9IG5ldyBJbWFnZSgpO1xuICAgICAgLy8gaGFoYWhhLCB5ZXMsIEkga25vd1xuICAgICAgdGhpcy5fY3VycmVudE1lbWVJbWcuc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iLnNsaWNlKDEpKTtcbiAgICAgIHRoaXMuX21lbWVJbWdDb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5fY3VycmVudE1lbWVJbWcpO1xuICAgIH0pO1xuICB9XG59IiwiaW1wb3J0IFRlc3RDb250cm9sbGVyIGZyb20gJy4vVGVzdENvbnRyb2xsZXInO1xuXG5jb25zdCBzZXR0aW5nc0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2V0dGluZ3MtZm9ybScpO1xuXG5zZXR0aW5nc0Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICBmZXRjaChzZXR0aW5nc0Zvcm0uYWN0aW9uLCB7XG4gICAgbWV0aG9kOiBzZXR0aW5nc0Zvcm0ubWV0aG9kLFxuICAgIGJvZHk6IG5ldyBGb3JtRGF0YShzZXR0aW5nc0Zvcm0pXG4gIH0pO1xufSk7XG5cbmlmICghc2VsZi5mZXRjaCkge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2FybmluZycpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xufVxuXG5uZXcgVGVzdENvbnRyb2xsZXIoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRlc3RlcicpKTsiLCIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNSBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENsYXNzIGNvbnN0cnVjdG9yIGZvciBUZXh0ZmllbGQgTURMIGNvbXBvbmVudC5cbiAqIEltcGxlbWVudHMgTURMIGNvbXBvbmVudCBkZXNpZ24gcGF0dGVybiBkZWZpbmVkIGF0OlxuICogaHR0cHM6Ly9naXRodWIuY29tL2phc29ubWF5ZXMvbWRsLWNvbXBvbmVudC1kZXNpZ24tcGF0dGVyblxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCBUaGUgZWxlbWVudCB0aGF0IHdpbGwgYmUgdXBncmFkZWQuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1hdGVyaWFsVGV4dGZpZWxkKGVsZW1lbnQpIHtcbiAgdGhpcy5lbGVtZW50XyA9IGVsZW1lbnQ7XG4gIHRoaXMubWF4Um93cyA9IHRoaXMuQ29uc3RhbnRfLk5PX01BWF9ST1dTO1xuICAvLyBJbml0aWFsaXplIGluc3RhbmNlLlxuICB0aGlzLmluaXQoKTtcbn1cblxuLyoqXG4gKiBTdG9yZSBjb25zdGFudHMgaW4gb25lIHBsYWNlIHNvIHRoZXkgY2FuIGJlIHVwZGF0ZWQgZWFzaWx5LlxuICpcbiAqIEBlbnVtIHtzdHJpbmcgfCBudW1iZXJ9XG4gKiBAcHJpdmF0ZVxuICovXG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUuQ29uc3RhbnRfID0ge1xuICBOT19NQVhfUk9XUzogLTEsXG4gIE1BWF9ST1dTX0FUVFJJQlVURTogJ21heHJvd3MnXG59O1xuXG4vKipcbiAqIFN0b3JlIHN0cmluZ3MgZm9yIGNsYXNzIG5hbWVzIGRlZmluZWQgYnkgdGhpcyBjb21wb25lbnQgdGhhdCBhcmUgdXNlZCBpblxuICogSmF2YVNjcmlwdC4gVGhpcyBhbGxvd3MgdXMgdG8gc2ltcGx5IGNoYW5nZSBpdCBpbiBvbmUgcGxhY2Ugc2hvdWxkIHdlXG4gKiBkZWNpZGUgdG8gbW9kaWZ5IGF0IGEgbGF0ZXIgZGF0ZS5cbiAqXG4gKiBAZW51bSB7c3RyaW5nfVxuICogQHByaXZhdGVcbiAqL1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLkNzc0NsYXNzZXNfID0ge1xuICBMQUJFTDogJ21kbC10ZXh0ZmllbGRfX2xhYmVsJyxcbiAgSU5QVVQ6ICdtZGwtdGV4dGZpZWxkX19pbnB1dCcsXG4gIElTX0RJUlRZOiAnaXMtZGlydHknLFxuICBJU19GT0NVU0VEOiAnaXMtZm9jdXNlZCcsXG4gIElTX0RJU0FCTEVEOiAnaXMtZGlzYWJsZWQnLFxuICBJU19JTlZBTElEOiAnaXMtaW52YWxpZCcsXG4gIElTX1VQR1JBREVEOiAnaXMtdXBncmFkZWQnXG59O1xuXG4vKipcbiAqIEhhbmRsZSBpbnB1dCBiZWluZyBlbnRlcmVkLlxuICpcbiAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IFRoZSBldmVudCB0aGF0IGZpcmVkLlxuICogQHByaXZhdGVcbiAqL1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLm9uS2V5RG93bl8gPSBmdW5jdGlvbihldmVudCkge1xuICB2YXIgY3VycmVudFJvd0NvdW50ID0gZXZlbnQudGFyZ2V0LnZhbHVlLnNwbGl0KCdcXG4nKS5sZW5ndGg7XG4gIGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgIGlmIChjdXJyZW50Um93Q291bnQgPj0gdGhpcy5tYXhSb3dzKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBIYW5kbGUgZm9jdXMuXG4gKlxuICogQHBhcmFtIHtFdmVudH0gZXZlbnQgVGhlIGV2ZW50IHRoYXQgZmlyZWQuXG4gKiBAcHJpdmF0ZVxuICovXG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUub25Gb2N1c18gPSBmdW5jdGlvbihldmVudCkge1xuICB0aGlzLmVsZW1lbnRfLmNsYXNzTGlzdC5hZGQodGhpcy5Dc3NDbGFzc2VzXy5JU19GT0NVU0VEKTtcbn07XG5cbi8qKlxuICogSGFuZGxlIGxvc3QgZm9jdXMuXG4gKlxuICogQHBhcmFtIHtFdmVudH0gZXZlbnQgVGhlIGV2ZW50IHRoYXQgZmlyZWQuXG4gKiBAcHJpdmF0ZVxuICovXG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUub25CbHVyXyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIHRoaXMuZWxlbWVudF8uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLkNzc0NsYXNzZXNfLklTX0ZPQ1VTRUQpO1xufTtcblxuLyoqXG4gKiBIYW5kbGUgcmVzZXQgZXZlbnQgZnJvbSBvdXQgc2lkZS5cbiAqXG4gKiBAcGFyYW0ge0V2ZW50fSBldmVudCBUaGUgZXZlbnQgdGhhdCBmaXJlZC5cbiAqIEBwcml2YXRlXG4gKi9cbk1hdGVyaWFsVGV4dGZpZWxkLnByb3RvdHlwZS5vblJlc2V0XyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIHRoaXMudXBkYXRlQ2xhc3Nlc18oKTtcbn07XG5cbi8qKlxuICogSGFuZGxlIGNsYXNzIHVwZGF0ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLnVwZGF0ZUNsYXNzZXNfID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuY2hlY2tEaXNhYmxlZCgpO1xuICB0aGlzLmNoZWNrVmFsaWRpdHkoKTtcbiAgdGhpcy5jaGVja0RpcnR5KCk7XG59O1xuXG4vLyBQdWJsaWMgbWV0aG9kcy5cblxuLyoqXG4gKiBDaGVjayB0aGUgZGlzYWJsZWQgc3RhdGUgYW5kIHVwZGF0ZSBmaWVsZCBhY2NvcmRpbmdseS5cbiAqXG4gKiBAcHVibGljXG4gKi9cbk1hdGVyaWFsVGV4dGZpZWxkLnByb3RvdHlwZS5jaGVja0Rpc2FibGVkID0gZnVuY3Rpb24oKSB7XG4gIGlmICh0aGlzLmlucHV0Xy5kaXNhYmxlZCkge1xuICAgIHRoaXMuZWxlbWVudF8uY2xhc3NMaXN0LmFkZCh0aGlzLkNzc0NsYXNzZXNfLklTX0RJU0FCTEVEKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmVsZW1lbnRfLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5Dc3NDbGFzc2VzXy5JU19ESVNBQkxFRCk7XG4gIH1cbn07XG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGVbJ2NoZWNrRGlzYWJsZWQnXSA9XG4gICAgTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLmNoZWNrRGlzYWJsZWQ7XG5cbi8qKlxuICogQ2hlY2sgdGhlIHZhbGlkaXR5IHN0YXRlIGFuZCB1cGRhdGUgZmllbGQgYWNjb3JkaW5nbHkuXG4gKlxuICogQHB1YmxpY1xuICovXG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUuY2hlY2tWYWxpZGl0eSA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pbnB1dF8udmFsaWRpdHkpIHtcbiAgICBpZiAodGhpcy5pbnB1dF8udmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuZWxlbWVudF8uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLkNzc0NsYXNzZXNfLklTX0lOVkFMSUQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVsZW1lbnRfLmNsYXNzTGlzdC5hZGQodGhpcy5Dc3NDbGFzc2VzXy5JU19JTlZBTElEKTtcbiAgICB9XG4gIH1cbn07XG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGVbJ2NoZWNrVmFsaWRpdHknXSA9XG4gICAgTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLmNoZWNrVmFsaWRpdHk7XG5cbi8qKlxuICogQ2hlY2sgdGhlIGRpcnR5IHN0YXRlIGFuZCB1cGRhdGUgZmllbGQgYWNjb3JkaW5nbHkuXG4gKlxuICogQHB1YmxpY1xuICovXG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUuY2hlY2tEaXJ0eSA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pbnB1dF8udmFsdWUgJiYgdGhpcy5pbnB1dF8udmFsdWUubGVuZ3RoID4gMCkge1xuICAgIHRoaXMuZWxlbWVudF8uY2xhc3NMaXN0LmFkZCh0aGlzLkNzc0NsYXNzZXNfLklTX0RJUlRZKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmVsZW1lbnRfLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5Dc3NDbGFzc2VzXy5JU19ESVJUWSk7XG4gIH1cbn07XG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGVbJ2NoZWNrRGlydHknXSA9XG4gICAgTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLmNoZWNrRGlydHk7XG5cbi8qKlxuICogRGlzYWJsZSB0ZXh0IGZpZWxkLlxuICpcbiAqIEBwdWJsaWNcbiAqL1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5pbnB1dF8uZGlzYWJsZWQgPSB0cnVlO1xuICB0aGlzLnVwZGF0ZUNsYXNzZXNfKCk7XG59O1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlWydkaXNhYmxlJ10gPSBNYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUuZGlzYWJsZTtcblxuLyoqXG4gKiBFbmFibGUgdGV4dCBmaWVsZC5cbiAqXG4gKiBAcHVibGljXG4gKi9cbk1hdGVyaWFsVGV4dGZpZWxkLnByb3RvdHlwZS5lbmFibGUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5pbnB1dF8uZGlzYWJsZWQgPSBmYWxzZTtcbiAgdGhpcy51cGRhdGVDbGFzc2VzXygpO1xufTtcbk1hdGVyaWFsVGV4dGZpZWxkLnByb3RvdHlwZVsnZW5hYmxlJ10gPSBNYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUuZW5hYmxlO1xuXG4vKipcbiAqIFVwZGF0ZSB0ZXh0IGZpZWxkIHZhbHVlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgdmFsdWUgdG8gd2hpY2ggdG8gc2V0IHRoZSBjb250cm9sIChvcHRpb25hbCkuXG4gKiBAcHVibGljXG4gKi9cbk1hdGVyaWFsVGV4dGZpZWxkLnByb3RvdHlwZS5jaGFuZ2UgPSBmdW5jdGlvbih2YWx1ZSkge1xuXG4gIGlmICh2YWx1ZSkge1xuICAgIHRoaXMuaW5wdXRfLnZhbHVlID0gdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5pbnB1dF8udmFsdWUgPSAnJztcbiAgfVxuICB0aGlzLnVwZGF0ZUNsYXNzZXNfKCk7XG59O1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlWydjaGFuZ2UnXSA9IE1hdGVyaWFsVGV4dGZpZWxkLnByb3RvdHlwZS5jaGFuZ2U7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBlbGVtZW50LlxuICovXG5NYXRlcmlhbFRleHRmaWVsZC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXG4gIGlmICh0aGlzLmVsZW1lbnRfKSB7XG4gICAgdGhpcy5sYWJlbF8gPSB0aGlzLmVsZW1lbnRfLnF1ZXJ5U2VsZWN0b3IoJy4nICsgdGhpcy5Dc3NDbGFzc2VzXy5MQUJFTCk7XG4gICAgdGhpcy5pbnB1dF8gPSB0aGlzLmVsZW1lbnRfLnF1ZXJ5U2VsZWN0b3IoJy4nICsgdGhpcy5Dc3NDbGFzc2VzXy5JTlBVVCk7XG5cbiAgICBpZiAodGhpcy5pbnB1dF8pIHtcbiAgICAgIGlmICh0aGlzLmlucHV0Xy5oYXNBdHRyaWJ1dGUoXG4gICAgICAgICAgICAvKiogQHR5cGUge3N0cmluZ30gKi8gKHRoaXMuQ29uc3RhbnRfLk1BWF9ST1dTX0FUVFJJQlVURSkpKSB7XG4gICAgICAgIHRoaXMubWF4Um93cyA9IHBhcnNlSW50KHRoaXMuaW5wdXRfLmdldEF0dHJpYnV0ZShcbiAgICAgICAgICAgIC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAodGhpcy5Db25zdGFudF8uTUFYX1JPV1NfQVRUUklCVVRFKSksIDEwKTtcbiAgICAgICAgaWYgKGlzTmFOKHRoaXMubWF4Um93cykpIHtcbiAgICAgICAgICB0aGlzLm1heFJvd3MgPSB0aGlzLkNvbnN0YW50Xy5OT19NQVhfUk9XUztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmJvdW5kVXBkYXRlQ2xhc3Nlc0hhbmRsZXIgPSB0aGlzLnVwZGF0ZUNsYXNzZXNfLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLmJvdW5kRm9jdXNIYW5kbGVyID0gdGhpcy5vbkZvY3VzXy5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5ib3VuZEJsdXJIYW5kbGVyID0gdGhpcy5vbkJsdXJfLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLmJvdW5kUmVzZXRIYW5kbGVyID0gdGhpcy5vblJlc2V0Xy5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5pbnB1dF8uYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLmJvdW5kVXBkYXRlQ2xhc3Nlc0hhbmRsZXIpO1xuICAgICAgdGhpcy5pbnB1dF8uYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCB0aGlzLmJvdW5kRm9jdXNIYW5kbGVyKTtcbiAgICAgIHRoaXMuaW5wdXRfLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCB0aGlzLmJvdW5kQmx1ckhhbmRsZXIpO1xuICAgICAgdGhpcy5pbnB1dF8uYWRkRXZlbnRMaXN0ZW5lcigncmVzZXQnLCB0aGlzLmJvdW5kUmVzZXRIYW5kbGVyKTtcblxuICAgICAgaWYgKHRoaXMubWF4Um93cyAhPT0gdGhpcy5Db25zdGFudF8uTk9fTUFYX1JPV1MpIHtcbiAgICAgICAgLy8gVE9ETzogVGhpcyBzaG91bGQgaGFuZGxlIHBhc3RpbmcgbXVsdGkgbGluZSB0ZXh0LlxuICAgICAgICAvLyBDdXJyZW50bHkgZG9lc24ndC5cbiAgICAgICAgdGhpcy5ib3VuZEtleURvd25IYW5kbGVyID0gdGhpcy5vbktleURvd25fLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuaW5wdXRfLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmJvdW5kS2V5RG93bkhhbmRsZXIpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnVwZGF0ZUNsYXNzZXNfKCk7XG4gICAgICB0aGlzLmVsZW1lbnRfLmNsYXNzTGlzdC5hZGQodGhpcy5Dc3NDbGFzc2VzXy5JU19VUEdSQURFRCk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIERvd25ncmFkZSB0aGUgY29tcG9uZW50XG4gKlxuICogQHByaXZhdGVcbiAqL1xuTWF0ZXJpYWxUZXh0ZmllbGQucHJvdG90eXBlLm1kbERvd25ncmFkZV8gPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5pbnB1dF8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLmJvdW5kVXBkYXRlQ2xhc3Nlc0hhbmRsZXIpO1xuICB0aGlzLmlucHV0Xy5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsIHRoaXMuYm91bmRGb2N1c0hhbmRsZXIpO1xuICB0aGlzLmlucHV0Xy5yZW1vdmVFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcy5ib3VuZEJsdXJIYW5kbGVyKTtcbiAgdGhpcy5pbnB1dF8ucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzZXQnLCB0aGlzLmJvdW5kUmVzZXRIYW5kbGVyKTtcbiAgaWYgKHRoaXMuYm91bmRLZXlEb3duSGFuZGxlcikge1xuICAgIHRoaXMuaW5wdXRfLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmJvdW5kS2V5RG93bkhhbmRsZXIpO1xuICB9XG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFdpbmRvd01lc3NlbmdlciB7XG4gIGNvbnN0cnVjdG9yKHVybCkge1xuICAgIHRoaXMuX3JlcXVlc3RJZCA9IDA7XG4gICAgXG4gICAgdGhpcy5faWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgdGhpcy5faWZyYW1lLmNsYXNzTmFtZSA9ICdoaWRkZW4tdGVzdGVyJztcbiAgICB0aGlzLl9yZWFkeSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGxpc3RlbmVyID0gZSA9PiB7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgdGhpcy5faWZyYW1lLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBsaXN0ZW5lcik7XG4gICAgICAgIHRoaXMuX2lmcmFtZS5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9yTGlzdGVuZXIpO1xuICAgICAgfTtcbiAgICAgIGNvbnN0IGVycm9yTGlzdGVuZXIgPSBlID0+IHtcbiAgICAgICAgcmVqZWN0KEVycm9yKFwiSWZyYW1lIGxvYWQgZmFpbGVkXCIpKTtcbiAgICAgICAgdGhpcy5faWZyYW1lLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBsaXN0ZW5lcik7XG4gICAgICAgIHRoaXMuX2lmcmFtZS5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9yTGlzdGVuZXIpO1xuICAgICAgfTtcbiAgICAgIHRoaXMuX2lmcmFtZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgbGlzdGVuZXIpO1xuICAgICAgdGhpcy5faWZyYW1lLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3JMaXN0ZW5lcik7XG4gICAgICB0aGlzLl9pZnJhbWUuc3JjID0gdXJsO1xuICAgIH0pO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5faWZyYW1lKTtcblxuICAgIHRoaXMuX3RhcmdldE9yaWdpbiA9IG5ldyBVUkwodXJsKS5vcmlnaW47XG5cbiAgICB0aGlzLl93aW5kb3dMaXN0ZW5lciA9IGV2ZW50ID0+IHRoaXMuX29uTWVzc2FnZShldmVudCk7XG4gICAgc2VsZi5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgdGhpcy5fd2luZG93TGlzdGVuZXIpO1xuXG4gICAgLy8gbWVzc2FnZSBqb2JzIGF3YWl0aW5nIHJlc3BvbnNlIHtjYWxsSWQ6IFtyZXNvbHZlLCByZWplY3RdfVxuICAgIHRoaXMuX3BlbmRpbmcgPSB7fTtcbiAgfVxuXG4gIGRlc3RydWN0KCkge1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5faWZyYW1lKTtcbiAgICBzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB0aGlzLl93aW5kb3dMaXN0ZW5lcik7XG4gIH1cblxuICBfb25NZXNzYWdlKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50Lm9yaWdpbiAhPSB0aGlzLl90YXJnZXRPcmlnaW4pIHJldHVybjtcblxuICAgIGlmICghZXZlbnQuZGF0YS5pZCkge1xuICAgICAgY29uc29sZS5sb2coXCJVbmV4cGVjdGVkIG1lc3NhZ2VcIiwgZXZlbnQpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciByZXNvbHZlciA9IHRoaXMuX3BlbmRpbmdbZXZlbnQuZGF0YS5pZF07XG5cbiAgICBpZiAoIXJlc29sdmVyKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIk5vIHJlc29sdmVyIGZvclwiLCBldmVudCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZGVsZXRlIHRoaXMuX3BlbmRpbmdbZXZlbnQuZGF0YS5pZF07XG5cbiAgICBpZiAoZXZlbnQuZGF0YS5lcnJvcikge1xuICAgICAgcmVzb2x2ZXJbMV0obmV3IEVycm9yKGV2ZW50LmRhdGEuZXJyb3IpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICByZXNvbHZlclswXShldmVudC5kYXRhLnJlc3VsdCk7XG4gIH1cblxuICBtZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVhZHkudGhlbihfID0+IHtcbiAgICAgIGNvbnN0IHJlcXVlc3RJZCA9ICsrdGhpcy5fcmVxdWVzdElkO1xuICAgICAgbWVzc2FnZS5pZCA9IHJlcXVlc3RJZDtcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgdGhpcy5fcGVuZGluZ1tyZXF1ZXN0SWRdID0gW3Jlc29sdmUsIHJlamVjdF07XG4gICAgICAgIHRoaXMuX2lmcmFtZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKG1lc3NhZ2UsIHRoaXMuX3RhcmdldE9yaWdpbik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFdpbmRvd01lc3NlbmdlciBmcm9tICcuL1dpbmRvd01lc3Nlbmdlcic7XG5cbmNvbnN0IGFwcE9yaWdpbiA9IG5ldyBVUkwobG9jYXRpb24uaHJlZik7XG5hcHBPcmlnaW4ucG9ydCA9IHNlbGYuY29uZmlnLmFwcFBvcnQ7XG5jb25zdCBleGVjdXRvclVybCA9IG5ldyBVUkwoJy9yZW1vdGU/YnlwYXNzLXN3JywgYXBwT3JpZ2luKTtcblxuZnVuY3Rpb24gcmVtb3RlRXZhbChqcykge1xuICBjb25zdCBtZXNzZW5nZXIgPSBuZXcgV2luZG93TWVzc2VuZ2VyKGV4ZWN1dG9yVXJsKTtcbiAgbGV0IGVycm9yO1xuXG4gIGlmICh0eXBlb2YganMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBqcyA9ICcoJyArIGpzLnRvU3RyaW5nKCkgKyAnKSgpJztcbiAgfVxuXG4gIHJldHVybiBmaWd1cmVPdXRDb25uZWN0aW9uVHlwZSgpLnRoZW4odHlwZSA9PiB7XG4gICAgaWYgKHR5cGUgPT09ICdvZmZsaW5lJykgcmV0dXJuIFtcIkxvb2tzIGxpa2UgdGhlIHNlcnZlciBpcyBvZmZsaW5lXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuXG4gICAgcmV0dXJuIG1lc3Nlbmdlci5tZXNzYWdlKHtcbiAgICAgIGV2YWw6IGpzXG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgIGVycm9yID0gZXJyO1xuICAgIH0pLnRoZW4odmFsID0+IHtcbiAgICAgIG1lc3Nlbmdlci5kZXN0cnVjdCgpO1xuICAgICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgICAgIHJldHVybiB2YWw7XG4gICAgfSk7XG4gIH0pO1xuXG59XG5cbmZ1bmN0aW9uIGZpZ3VyZU91dENvbm5lY3Rpb25UeXBlKCkge1xuICBjb25zdCBzdGFydCA9IHBlcmZvcm1hbmNlLm5vdygpO1xuXG4gIHJldHVybiBQcm9taXNlLnJhY2UoW1xuICAgIGZldGNoKG5ldyBVUkwoJy9waW5nJywgYXBwT3JpZ2luKSksXG4gICAgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDQwMDApKVxuICBdKS50aGVuKF8gPT4ge1xuICAgIGNvbnN0IGR1cmF0aW9uID0gcGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydDtcblxuICAgIGlmIChkdXJhdGlvbiA8IDMwMDApIHtcbiAgICAgIHJldHVybiAncGVyZmVjdCc7XG4gICAgfVxuICAgIGlmIChkdXJhdGlvbiA8IDM1MDApIHtcbiAgICAgIHJldHVybiAnc2xvdyc7XG4gICAgfVxuICAgIHJldHVybiAnbGllLWZpJztcbiAgfSwgXyA9PiB7XG4gICAgcmV0dXJuICdvZmZsaW5lJztcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGVtbygpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtcIlllcCwgdGhlIGRlbW8ncyB3b3JraW5nIVwiLCAnZGVtby5naWYnLCB0cnVlXSk7XG4gIH0sXG4gIG9mZmxpbmUoKSB7XG4gICAgcmV0dXJuIGZpZ3VyZU91dENvbm5lY3Rpb25UeXBlKCkudGhlbih0eXBlID0+IHtcbiAgICAgIGlmICh0eXBlID09ICdvZmZsaW5lJykge1xuICAgICAgICByZXR1cm4gW1wiWWVwISBUaGUgc2VydmVyIGlzIHRvdGFsbHkgZGVhZCFcIiwgJzEuZ2lmJywgdHJ1ZV07XG4gICAgICB9XG4gICAgICByZXR1cm4gW1wiSG1tLCBubywgbG9va3MgbGlrZSB0aGUgc2VydmVyIGlzIHN0aWxsIHVwXCIsICdub3BlLmdpZicsIGZhbHNlXTtcbiAgICB9KTtcbiAgfSxcbiAgWydsaWUtZmknXSgpIHtcbiAgICByZXR1cm4gZmlndXJlT3V0Q29ubmVjdGlvblR5cGUoKS50aGVuKHR5cGUgPT4ge1xuICAgICAgc3dpdGNoKHR5cGUpIHtcbiAgICAgICAgY2FzZSBcImxpZS1maVwiOlxuICAgICAgICAgIHJldHVybiBbXCJZZWVlZXAsIHRoYXQncyBsaWUtZmkgYWxyaWdodC5cIiwgJzIuZ2lmJywgdHJ1ZV07XG4gICAgICAgIGNhc2UgXCJvZmZsaW5lXCI6XG4gICAgICAgICAgcmV0dXJuIFtcIkhtbSwgbm8sIGxvb2tzIGxpa2UgdGhlIHNlcnZlciBpcyBkb3duLlwiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIFtcIlRoZSBzZXJ2ZXIgcmVzcG9uZGVkIHdheSB0b28gZmFzdCBmb3IgbGllLWZpLlwiLCAnbm90LXF1aXRlLmdpZicsIGZhbHNlXTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgcmVnaXN0ZXJlZCgpIHtcbiAgICByZXR1cm4gcmVtb3RlRXZhbChmdW5jdGlvbigpIHtcbiAgICAgIGlmIChuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5jb250cm9sbGVyKSByZXR1cm4gW1wiU2VydmljZSB3b3JrZXIgc3VjY2Vzc2Z1bGx5IHJlZ2lzdGVyZWQhXCIsICczLmdpZicsIHRydWVdO1xuICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHRoZXJlJ3MgYSBzZXJ2aWNlIHdvcmtlciByZWdpc3RlcmVkIDooXCIsICdub3BlLmdpZicsIGZhbHNlXTtcbiAgICB9KTtcbiAgfSxcbiAgWydzdy13YWl0aW5nJ10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9uKCcvJykudGhlbihyZWcgPT4ge1xuICAgICAgICBpZiAoIXJlZykgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHRoZXJlJ3MgYSBzZXJ2aWNlIHdvcmtlciByZWdpc3RlcmVkIGF0IGFsbCFcIiwgJ3NhZC5naWYnLCBmYWxzZV07XG4gICAgICAgIGlmICghcmVnLndhaXRpbmcpIHJldHVybiBbXCJUaGVyZSdzIG5vIHNlcnZpY2Ugd29ya2VyIHdhaXRpbmdcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICByZXR1cm4gW1wiWWV5ISBUaGVyZSdzIGEgc2VydmljZSB3b3JrZXIgd2FpdGluZyFcIiwgXCI0LmdpZlwiLCB0cnVlXTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxuICBbJ3N3LWFjdGl2ZSddKCkge1xuICAgIHJldHVybiByZW1vdGVFdmFsKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmdldFJlZ2lzdHJhdGlvbignLycpLnRoZW4ocmVnID0+IHtcbiAgICAgICAgaWYgKCFyZWcpIHJldHVybiBbXCJEb2Vzbid0IGxvb2sgbGlrZSB0aGVyZSdzIGEgc2VydmljZSB3b3JrZXIgcmVnaXN0ZXJlZCBhdCBhbGwhXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuICAgICAgICBpZiAocmVnLndhaXRpbmcpIHJldHVybiBbXCJUaGVyZSdzIHN0aWxsIGEgc2VydmljZSB3b3JrZXIgd2FpdGluZ1wiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgIHJldHVybiBbXCJObyBzZXJ2aWNlIHdvcmtlciB3YWl0aW5nISBZYXkhXCIsIFwiNS5naWZcIiwgdHJ1ZV07XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgWydodG1sLXJlc3BvbnNlJ10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZmV0Y2goJy8nKS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKTtcblxuICAgICAgICBpZiAoIXR5cGUgfHwgKHR5cGUudG9Mb3dlckNhc2UoKSAhPSAndGV4dC9odG1sJyAmJiAhdHlwZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoJ3RleHQvaHRtbCcpKSkge1xuICAgICAgICAgIHJldHVybiBbXCJUaGUgcmVzcG9uc2UgZG9lc24ndCBoYXZlIHRoZSAnQ29udGVudC1UeXBlOiB0ZXh0L2h0bWwnIGhlYWRlclwiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpLnRoZW4odGV4dCA9PiBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKHRleHQsICd0ZXh0L2h0bWwnKSkudGhlbihkb2MgPT4ge1xuICAgICAgICAgIGlmIChkb2MuYm9keS5xdWVyeVNlbGVjdG9yKCcuYS13aW5uZXItaXMtbWUnKSkge1xuICAgICAgICAgICAgcmV0dXJuIFtcIkN1c3RvbSBIVE1MIHJlc3BvbnNlIGZvdW5kISBZYXkhXCIsIFwiNi5naWZcIiwgdHJ1ZV07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBbXCJDYW4ndCBmaW5kIGFuIGVsZW1lbnQgd2l0aCBjbGFzcyAnYS13aW5uZXItaXMtbWUnXCIsICdub3BlLmdpZicsIGZhbHNlXTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgWydnaWYtcmVzcG9uc2UnXSgpIHtcbiAgICByZXR1cm4gcmVtb3RlRXZhbChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmZXRjaCgnLycpLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICBjb25zdCB0eXBlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpO1xuXG4gICAgICAgIGlmICghdHlwZSB8fCAhdHlwZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoJ3RleHQvaHRtbCcpKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIkxvb2tzIGxpa2UgaXQgaXNuJ3QganVzdCBVUkxzIGVuZGluZyB3aXRoIC5qcGcgdGhhdCBhcmUgYmVpbmcgaW50ZXJjZXB0ZWRcIiwgJ25vdC1xdWl0ZS5naWYnLCBmYWxzZV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmV0Y2goJy9ibGFoLmpwZycpLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgIGNvbnN0IHR5cGUgPSByZXNwb25zZS5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJyk7XG5cbiAgICAgICAgICBpZiAoIXR5cGUgfHwgIXR5cGUudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKCdpbWFnZS9naWYnKSkge1xuICAgICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHVybHMgZW5kaW5nIC5qcGcgYXJlIGdldHRpbmcgYSBnaWYgaW4gcmVzcG9uc2VcIiwgJ25vLWNyeS5naWYnLCBmYWxzZV07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIFtcIkltYWdlcyBhcmUgYmVpbmcgaW50ZXJjZXB0ZWQhXCIsIFwiNy5naWZcIiwgdHJ1ZV07XG4gICAgICAgIH0pXG4gICAgICB9KTtcbiAgICB9KVxuICB9LFxuICBbJ2dpZi00MDQnXSgpIHtcbiAgICByZXR1cm4gcmVtb3RlRXZhbChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoKCcvJyksXG4gICAgICAgIGZldGNoKCcvaW1ncy9kci1ldmlsLmdpZj9ieXBhc3Mtc3cnKSxcbiAgICAgICAgZmV0Y2goJy8nICsgTWF0aC5yYW5kb20oKSlcbiAgICAgIF0pLnRoZW4ocmVzcG9uc2VzID0+IHtcbiAgICAgICAgY29uc3QgcGFnZVR5cGUgPSByZXNwb25zZXNbMF0uaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpO1xuXG4gICAgICAgIGlmICghcGFnZVR5cGUgfHwgIXBhZ2VUeXBlLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aCgndGV4dC9odG1sJykpIHtcbiAgICAgICAgICByZXR1cm4gW1wiTG9va3MgbGlrZSBub24tNDA0IHBhZ2VzIGFyZSBnZXR0aW5nIHRoZSBnaWYgdG9vXCIsICdub3QtcXVpdGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgdHlwZSA9IHJlc3BvbnNlc1syXS5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJyk7XG5cbiAgICAgICAgaWYgKCF0eXBlIHx8ICF0eXBlLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aCgnaW1hZ2UvZ2lmJykpIHtcbiAgICAgICAgICByZXR1cm4gW1wiRG9lc24ndCBsb29rIGxpa2UgNDA0IHJlc3BvbnNlcyBhcmUgZ2V0dGluZyBhIGdpZiBpbiByZXR1cm5cIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgICAgICAgIHJlc3BvbnNlcy5zbGljZSgxKS5tYXAociA9PiByLmFycmF5QnVmZmVyKCkudGhlbihiID0+IG5ldyBVaW50OEFycmF5KGIpKSlcbiAgICAgICAgKS50aGVuKGFycmF5cyA9PiB7XG4gICAgICAgICAgY29uc3QgaXRlbXNUb0NoZWNrID0gMjAwMDtcbiAgICAgICAgICBjb25zdCBhMSA9IGFycmF5c1swXTtcbiAgICAgICAgICBjb25zdCBhMiA9IGFycmF5c1sxXTtcblxuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXNUb0NoZWNrOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChhMVtpXSAhPT0gYTJbaV0pIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIDQwNCByZXNwb25zZXMgYXJlIGdldHRpbmcgdGhlIGRyLWV2aWwgZ2lmIGluIHJldHVyblwiLCAnbm90LXF1aXRlLmdpZicsIGZhbHNlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIFtcIllheSEgNDA0IHBhZ2VzIGdldCBnaWZzIVwiLCBcIjguZ2lmXCIsIHRydWVdO1xuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9KTtcbiAgfSxcbiAgWydpbnN0YWxsLWNhY2hlZCddKCkge1xuICAgIHJldHVybiByZW1vdGVFdmFsKGZ1bmN0aW9uKCkge1xuICAgICAgY29uc3QgZXhwZWN0ZWRVcmxzID0gW1xuICAgICAgICAnLycsXG4gICAgICAgICcvanMvbWFpbi5qcycsXG4gICAgICAgICcvY3NzL21haW4uY3NzJyxcbiAgICAgICAgJy9pbWdzL2ljb24ucG5nJyxcbiAgICAgICAgJ2h0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9yb2JvdG8vdjE1LzJVWDdXTFRmVzNXOFRjbFRVdmxGeVEud29mZicsXG4gICAgICAgICdodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvcm9ib3RvL3YxNS9kLTZJWXBsT0ZvY0NhY0t6eHdYU09EOEUwaTdLWm4tRVBueW8zSFp1N2t3LndvZmYnXG4gICAgICBdLm1hcCh1cmwgPT4gbmV3IFVSTCh1cmwsIGxvY2F0aW9uKS5ocmVmKTtcblxuICAgICAgcmV0dXJuIGNhY2hlcy5oYXMoJ3dpdHRyLXN0YXRpYy12MScpLnRoZW4oaGFzID0+IHtcbiAgICAgICAgaWYgKCFoYXMpIHJldHVybiBbXCJDYW4ndCBmaW5kIGEgY2FjaGUgbmFtZWQgd2l0dHItc3RhdGljLXYxXCIsICdub3BlLmdpZicsIGZhbHNlXTtcblxuICAgICAgICByZXR1cm4gY2FjaGVzLm9wZW4oJ3dpdHRyLXN0YXRpYy12MScpLnRoZW4oYyA9PiBjLmtleXMoKSkudGhlbihyZXFzID0+IHtcbiAgICAgICAgICBjb25zdCB1cmxzID0gcmVxcy5tYXAociA9PiByLnVybCk7XG4gICAgICAgICAgY29uc3QgYWxsQWNjb3VudGVkRm9yID0gZXhwZWN0ZWRVcmxzLmV2ZXJ5KHVybCA9PiB1cmxzLmluY2x1ZGVzKHVybCkpO1xuXG4gICAgICAgICAgaWYgKGFsbEFjY291bnRlZEZvcikge1xuICAgICAgICAgICAgcmV0dXJuIFtcIllheSEgVGhlIGNhY2hlIGlzIHJlYWR5IHRvIGdvIVwiLCBcIjkuZ2lmXCIsIHRydWVdO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gW1wiVGhlIGNhY2hlIGlzIHRoZXJlLCBidXQgaXQncyBtaXNzaW5nIHNvbWUgdGhpbmdzXCIsICdub3QtcXVpdGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgfSk7XG4gIH0sXG4gIFsnY2FjaGUtc2VydmVkJ10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW1xuICAgICAgICBmZXRjaCgnLycpLFxuICAgICAgICBmZXRjaCgnL3BpbmcnKS50aGVuKHIgPT4gci5qc29uKCkpLmNhdGNoKGUgPT4gKHtvazogZmFsc2V9KSlcbiAgICAgIF0pLnRoZW4ocmVzcG9uc2VzID0+IHtcbiAgICAgICAgY29uc3QgY2FjaGVkUmVzcG9uc2UgPSByZXNwb25zZXNbMF07XG4gICAgICAgIGNvbnN0IGpzb25SZXNwb25zZSA9IHJlc3BvbnNlc1sxXTtcblxuICAgICAgICBpZiAoIWpzb25SZXNwb25zZS5vaykgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIG5vbi1jYWNoZWQgcmVxdWVzdHMgYXJlIGdldHRpbmcgdGhyb3VnaFwiLCAnbm90LXF1aXRlLmdpZicsIGZhbHNlXTtcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDIwMDApKS50aGVuKF8gPT4gZmV0Y2goJy8nKSkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgaWYgKGNhY2hlZFJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdEYXRlJykgPT09IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdEYXRlJykpIHtcbiAgICAgICAgICAgIHJldHVybiBbXCJZYXkhIENhY2hlZCByZXNwb25zZXMgYXJlIGJlaW5nIHJldHVybmVkIVwiLCBcIjEwLmdpZlwiLCB0cnVlXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHJlc3BvbnNlcyBhcmUgcmV0dXJuZWQgZnJvbSB0aGUgY2FjaGVcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sXG4gIFsnbmV3LWNhY2hlLXJlYWR5J10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW1xuICAgICAgICBjYWNoZXMuaGFzKCd3aXR0ci1zdGF0aWMtdjEnKSxcbiAgICAgICAgY2FjaGVzLmhhcygnd2l0dHItc3RhdGljLXYyJylcbiAgICAgIF0pLnRoZW4oaGFzQ2FjaGVzID0+IHtcbiAgICAgICAgaWYgKCFoYXNDYWNoZXNbMF0pIHJldHVybiBbXCJMb29rcyBsaWtlIHRoZSB2MSBjYWNoZSBoYXMgYWxyZWFkeSBnb25lXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuICAgICAgICBpZiAoIWhhc0NhY2hlc1sxXSkgcmV0dXJuIFtcIkNhbid0IGZpbmQgdGhlIHdpdHRyLXN0YXRpYy12MiBjYWNoZVwiLCAnc2FkLmdpZicsIGZhbHNlXTtcblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoXG4gICAgICAgICAgWyd3aXR0ci1zdGF0aWMtdjEnLCAnd2l0dHItc3RhdGljLXYyJ10ubWFwKG5hbWUgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlcy5vcGVuKG5hbWUpXG4gICAgICAgICAgICAgIC50aGVuKGMgPT4gYy5tYXRjaCgnL2Nzcy9tYWluLmNzcycpKVxuICAgICAgICAgICAgICAudGhlbihyID0+IHIgJiYgci50ZXh0KCkpXG4gICAgICAgICAgfSlcbiAgICAgICAgKS50aGVuKGNzc1RleHRzID0+IHtcbiAgICAgICAgICBpZiAoIWNzc1RleHRzWzBdKSByZXR1cm4gW1wiQ2FuJ3QgZmluZCBDU1MgaW4gdGhlIHYxIGNhY2hlXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgIGlmICghY3NzVGV4dHNbMV0pIHJldHVybiBbXCJDYW4ndCBmaW5kIENTUyBpbiB0aGUgdjIgY2FjaGVcIiwgJ3NhZC5naWYnLCBmYWxzZV07XG5cbiAgICAgICAgICBpZiAoY3NzVGV4dHNbMF0gPT09IGNzc1RleHRzWzFdKSB7XG4gICAgICAgICAgICByZXR1cm4gW1wiVGhlcmUncyBhIG5ldyBjYWNoZSwgYnV0IHRoZSBDU1MgbG9va3MgdGhlIHNhbWVcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gW1wiWWF5ISBUaGUgbmV3IGNhY2hlIGlzIHJlYWR5LCBidXQgaXNuJ3QgZGlzcnVwdGluZyBjdXJyZW50IHBhZ2VzXCIsIFwiMTEuZ2lmXCIsIHRydWVdO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pXG4gIH0sXG4gIFsnbmV3LWNhY2hlLXVzZWQnXSgpIHtcbiAgICByZXR1cm4gcmVtb3RlRXZhbChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChbXG4gICAgICAgIGNhY2hlcy5oYXMoJ3dpdHRyLXN0YXRpYy12MScpLFxuICAgICAgICBjYWNoZXMuaGFzKCd3aXR0ci1zdGF0aWMtdjInKVxuICAgICAgXSkudGhlbihoYXNDYWNoZXMgPT4ge1xuICAgICAgICBpZiAoaGFzQ2FjaGVzWzBdKSByZXR1cm4gW1wiTG9va3MgbGlrZSB0aGUgdjEgY2FjaGUgaXMgc3RpbGwgdGhlcmVcIiwgJ25vdC1xdWl0ZS5naWYnLCBmYWxzZV07XG4gICAgICAgIGlmICghaGFzQ2FjaGVzWzFdKSByZXR1cm4gW1wiQ2FuJ3QgZmluZCB0aGUgd2l0dHItc3RhdGljLXYyIGNhY2hlXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuXG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChbXG4gICAgICAgICAgZmV0Y2goJy9jc3MvbWFpbi5jc3MnKSxcbiAgICAgICAgICBuZXcgUHJvbWlzZShyID0+IHNldFRpbWVvdXQociwgMjAwMCkpLnRoZW4oXyA9PiBmZXRjaCgnL2Nzcy9tYWluLmNzcycpKVxuICAgICAgICBdKS50aGVuKHJlc3BvbnNlcyA9PiB7XG4gICAgICAgICAgaWYgKHJlc3BvbnNlc1swXS5oZWFkZXJzLmdldCgnRGF0ZScpICE9IHJlc3BvbnNlc1sxXS5oZWFkZXJzLmdldCgnRGF0ZScpKSB7XG4gICAgICAgICAgICByZXR1cm4gW1wiRG9lc24ndCBsb29rIGxpa2UgdGhlIENTUyBpcyBiZWluZyBzZXJ2ZWQgZnJvbSB0aGUgY2FjaGVcIiwgJ21pc3Rha2UuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBvcGVuSWZyYW1lKCcvJykudGhlbihpZnJhbWUgPT4ge1xuICAgICAgICAgICAgY29uc3Qgd2luID0gaWZyYW1lLmNvbnRlbnRXaW5kb3c7XG4gICAgICAgICAgICBjb25zdCBkb2MgPSB3aW4uZG9jdW1lbnQ7XG4gICAgICAgICAgICBjb25zdCBiZyA9IHdpbi5nZXRDb21wdXRlZFN0eWxlKGRvYy5xdWVyeVNlbGVjdG9yKCcudG9vbGJhcicpKS5iYWNrZ3JvdW5kQ29sb3I7XG5cbiAgICAgICAgICAgIGlmIChiZyA9PSAncmdiKDYzLCA4MSwgMTgxKScpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHRoZSBoZWFkZXIgY29sb3IgaGFzIGNoYW5nZWRcIiwgJ25vLWNyeS5naWYnLCBmYWxzZV07IFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFtcIllheSEgWW91IHNhZmVseSB1cGRhdGVkIHRoZSBDU1MhXCIsIFwiMTIuZ2lmXCIsIHRydWVdO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9KTtcbiAgfSxcbiAgWyd1cGRhdGUtbm90aWZ5J10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9uKCkudGhlbihyZWcgPT4ge1xuICAgICAgICBpZiAoIXJlZy53YWl0aW5nKSByZXR1cm4gW1wiRG9lc24ndCBsb29rIGxpa2UgdGhlcmUncyBhIHdhaXRpbmcgd29ya2VyXCIsICdub3BlLmdpZicsIGZhbHNlXTtcblxuICAgICAgICByZXR1cm4gb3BlbklmcmFtZSgnLycpLnRoZW4oaWZyYW1lID0+IHtcbiAgICAgICAgICBjb25zdCB3aW4gPSBpZnJhbWUuY29udGVudFdpbmRvdztcbiAgICAgICAgICBjb25zdCBkb2MgPSB3aW4uZG9jdW1lbnQ7XG5cbiAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDUwMCkpLnRoZW4oXyA9PiB7XG4gICAgICAgICAgICBpZiAoZG9jLnF1ZXJ5U2VsZWN0b3IoJy50b2FzdCcpKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbXCJZYXkhIFRoZXJlIGFyZSBub3RpZmljYXRpb25zIVwiLCBcIjEzLmdpZlwiLCB0cnVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbXCJEb2Vzbid0IGxvb2sgbGlrZSB0aGVyZSdzIGEgbm90aWZpY2F0aW9uIGJlaW5nIHRyaWdnZXJlZFwiLCAnc2FkLmdpZicsIGZhbHNlXTtcbiAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pXG4gIH0sXG4gIFsndXBkYXRlLXJlbG9hZCddKCkge1xuICAgIHJldHVybiByZW1vdGVFdmFsKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmdldFJlZ2lzdHJhdGlvbigpLnRoZW4ocmVnID0+IHtcbiAgICAgICAgaWYgKCFyZWcud2FpdGluZykgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHRoZXJlJ3MgYSB3YWl0aW5nIHdvcmtlclwiLCAnbm9wZS5naWYnLCBmYWxzZV07XG5cbiAgICAgICAgcmV0dXJuIG9wZW5JZnJhbWUoJy8nKS50aGVuKGlmcmFtZSA9PiB7XG4gICAgICAgICAgY29uc3Qgd2luID0gaWZyYW1lLmNvbnRlbnRXaW5kb3c7XG4gICAgICAgICAgY29uc3QgZG9jID0gd2luLmRvY3VtZW50O1xuXG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgc2V0VGltZW91dChfID0+IHJlc29sdmUoW1wiRGlkbid0IGRldGVjdCB0aGUgcGFnZSBiZWluZyByZWxvYWRlZCA6KFwiLCAnc2FkLmdpZicsIGZhbHNlXSksIDgwMDApO1xuICAgICAgICAgICAgaWZyYW1lLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBfID0+IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShbXCJZYXkhIFRoZSBwYWdlIHJlbG9hZGVkIVwiLCBcIjE0LmdpZlwiLCB0cnVlXSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pXG4gIH0sXG4gIFsnc2VydmUtc2tlbGV0b24nXSgpIHtcbiAgICByZXR1cm4gcmVtb3RlRXZhbChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmZXRjaCgnLycpLnRoZW4ociA9PiByLnRleHQoKSkudGhlbih0ZXh0ID0+IHtcbiAgICAgICAgaWYgKHRleHQuaW5jbHVkZXMoJ3Bvc3QtY29udGVudCcpKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIHRoZSBwYWdlIHNrZWxldG9uIGlzIGJlaW5nIHNlcnZlZFwiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vZ29vZ2xlLmNvbS8nKS50aGVuKHIgPT4gci50ZXh0KCkpLmNhdGNoKGUgPT4gJycpLnRoZW4oZ1RleHQgPT4ge1xuICAgICAgICAgIGlmIChnVGV4dCA9PSB0ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gW1wiTG9va3MgbGlrZSB5b3UncmUgc2VydmluZyB0aGUgc2tlbGV0b24gZm9yIGh0dHBzOi8vZ29vZ2xlLmNvbS8gdG9vIVwiLCAnbm90LXF1aXRlLmdpZicsIGZhbHNlXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIFtcIllheSEgVGhlIHBhZ2Ugc2tlbGV0b24gaXMgYmVpbmcgc2VydmVkIVwiLCBcIjE1LmdpZlwiLCB0cnVlXTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgWydpZGItYW5pbWFsJ10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gb3BlbkRiKCd0ZXN0LWRiJykudGhlbihkYiA9PiB7XG4gICAgICAgIGNvbnN0IHR4ID0gZGIudHJhbnNhY3Rpb24oJ2tleXZhbCcpO1xuICAgICAgICByZXR1cm4gdHgub2JqZWN0U3RvcmUoJ2tleXZhbCcpLmdldCgnZmF2b3JpdGVBbmltYWwnKS50aGVuKGFuaW1hbCA9PiB7XG4gICAgICAgICAgaWYgKCFhbmltYWwpIHJldHVybiBbXCJDYW4ndCBmaW5kIGZhdm9yaXRlQW5pbWFsIGluIGtleXZhbFwiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgICAgcmV0dXJuIFtcIllheSEgWW91ciBmYXZvcml0ZSBhbmltYWwgaXMgXFxcIlwiICsgYW5pbWFsICsgXCJcXFwiXCIsIFwiMTYuZ2lmXCIsIHRydWVdO1xuICAgICAgICB9KVxuICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgcmV0dXJuIFtcIkNvdWxkbid0IG9wZW4gdGhlIHRlc3QtZGIgZGF0YWJhc2UgYXQgYWxsIDooXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuICAgICAgfSlcbiAgICB9KTtcbiAgfSxcbiAgWydpZGItYWdlJ10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gb3BlbkRiKCd0ZXN0LWRiJykudGhlbihkYiA9PiB7XG4gICAgICAgIGlmICghQXJyYXkuZnJvbShkYi5vYmplY3RTdG9yZU5hbWVzKS5pbmNsdWRlcygncGVvcGxlJykpIHtcbiAgICAgICAgICByZXR1cm4gW1wiQ2FuJ3QgZmluZCB0aGUgJ3Blb3BsZScgb2JqZWN0U3RvcmVcIiwgJ21pc3Rha2UuZ2lmJywgZmFsc2VdOyBcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHR4ID0gZGIudHJhbnNhY3Rpb24oJ3Blb3BsZScpO1xuICAgICAgICBjb25zdCBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKCdwZW9wbGUnKTtcblxuICAgICAgICBpZiAoIUFycmF5LmZyb20oc3RvcmUuaW5kZXhOYW1lcykuaW5jbHVkZXMoJ2FnZScpKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIkNhbid0IGZpbmQgdGhlICdhZ2UnIGluZGV4IGluIHRoZSAncGVvcGxlJyBvYmplY3RTdG9yZVwiLCAnc2FkLmdpZicsIGZhbHNlXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGluZGV4ID0gc3RvcmUuaW5kZXgoJ2FnZScpO1xuXG4gICAgICAgIGlmIChpbmRleC5rZXlQYXRoID09ICdhZ2UnKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIllheSEgVGhlIGFnZSBpbmRleCBpcyB3b3JraW5nXCIsIFwiMTcuZ2lmXCIsIHRydWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFtcIlRoZSBhZ2UgaW5kZXggaXNuJ3QgaW5kZXhlZCBieSBhZ2VcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgcmV0dXJuIFtcIkNvdWxkbid0IG9wZW4gdGhlIHRlc3QtZGIgZGF0YWJhc2UgYXQgYWxsIDooXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuICAgICAgfSlcbiAgICB9KTtcbiAgfSxcbiAgWydpZGItc3RvcmUnXSgpIHtcbiAgICByZXR1cm4gcmVtb3RlRXZhbChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBvcGVuRGIoJ3dpdHRyJykudGhlbihkYiA9PiB7XG4gICAgICAgIGlmICghQXJyYXkuZnJvbShkYi5vYmplY3RTdG9yZU5hbWVzKS5pbmNsdWRlcygnd2l0dHJzJykpIHtcbiAgICAgICAgICByZXR1cm4gW1wiVGhlcmUgaXNuJ3QgYSAnd2l0dHJzJyBvYmplY3RTdG9yZVwiLCAnc2FkLmdpZicsIGZhbHNlXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHR4ID0gZGIudHJhbnNhY3Rpb24oJ3dpdHRycycpO1xuICAgICAgICBjb25zdCBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKCd3aXR0cnMnKTtcblxuICAgICAgICBpZiAoc3RvcmUua2V5UGF0aCAhPSAnaWQnKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIid3aXR0cnMnIG9iamVjdFN0b3JlIGRvZXNuJ3QgdXNlICdpZCcgYXMgaXRzIHByaW1hcnkga2V5XCIsICdub3BlLmdpZicsIGZhbHNlXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghQXJyYXkuZnJvbShzdG9yZS5pbmRleE5hbWVzKS5pbmNsdWRlcygnYnktZGF0ZScpKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIlRoZXJlIGlzbid0IGEgJ2J5LWRhdGUnIGluZGV4IG9uIHRoZSAnd2l0dHJzJyBvYmplY3RTdG9yZVwiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpbmRleCA9IHN0b3JlLmluZGV4KCdieS1kYXRlJyk7XG5cbiAgICAgICAgaWYgKGluZGV4LmtleVBhdGggIT0gJ3RpbWUnKSB7XG4gICAgICAgICAgcmV0dXJuIFtcIlRoZSAnYnktZGF0ZScgaW5kZXggaXNuJ3QgdXNpbmcgJ3RpbWUnIGFzIGl0cyBrZXlcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN0b3JlLmdldEFsbCgpLnRoZW4obWVzc2FnZXMgPT4ge1xuICAgICAgICAgIGlmICghbWVzc2FnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gW1wiVGhlIG9iamVjdFN0b3JlIGlzIHRoZXJlLCBidXQgaXQncyBlbXB0eVwiLCAnc2FkLmdpZicsIGZhbHNlXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBsb29rc01lc3NhZ2V5ID0gbWVzc2FnZXMuZXZlcnkobWVzc2FnZSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZS5pZCAmJiBtZXNzYWdlLmF2YXRhciAmJiBtZXNzYWdlLm5hbWUgJiYgbWVzc2FnZS50aW1lICYmIG1lc3NhZ2UuYm9keTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGlmIChsb29rc01lc3NhZ2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gW1wiVGhlIGRhdGFiYXNlIGlzIHNldCB1cCBhbmQgcG9wdWxhdGVkIVwiLCBcIjE4LmdpZlwiLCB0cnVlXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gW1wiTG9va3MgbGlrZSBzb21lIGluY29ycmVjdCBkYXRhIGlzIGluIHRoZSBkYXRhYmFzZVwiLCAnbm90LXF1aXRlLmdpZicsIGZhbHNlXTtcbiAgICAgICAgfSk7XG4gICAgICB9LCAoKSA9PiB7XG4gICAgICAgIHJldHVybiBbXCJDb3VsZG4ndCBvcGVuIHRoZSAnd2l0dHInIGRhdGFiYXNlIGF0IGFsbCA6KFwiLCAnc2FkLmdpZicsIGZhbHNlXTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxuICBbJ2lkYi1zaG93J10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gb3BlbkRiKCd3aXR0cicpLnRoZW4oZGIgPT4ge1xuICAgICAgICByZXR1cm4gb3BlbklmcmFtZSgnLz9uby1zb2NrZXQnKS50aGVuKGlmcmFtZSA9PiB7XG4gICAgICAgICAgY29uc3Qgd2luID0gaWZyYW1lLmNvbnRlbnRXaW5kb3c7XG4gICAgICAgICAgY29uc3QgZG9jID0gd2luLmRvY3VtZW50O1xuXG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHIgPT4gc2V0VGltZW91dChyLCA1MDApKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRpbWVzID0gQXJyYXkuZnJvbShkb2MucXVlcnlTZWxlY3RvckFsbCgnLnBvc3QtY29udGVudCB0aW1lJykpO1xuICAgICAgICAgICAgaWYgKCF0aW1lcy5sZW5ndGgpIHJldHVybiBbXCJQYWdlIGxvb2tzIGVtcHR5IHdpdGhvdXQgdGhlIHdlYiBzb2NrZXRcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuXG4gICAgICAgICAgICBjb25zdCBpbk9yZGVyID0gdGltZXMubWFwKHQgPT4gbmV3IERhdGUodC5nZXRBdHRyaWJ1dGUoJ2RhdGV0aW1lJykpKS5ldmVyeSgodGltZSwgaSwgYXJyKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IG5leHRUaW1lID0gYXJyW2krMV07XG4gICAgICAgICAgICAgIGlmICghbmV4dFRpbWUpIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICByZXR1cm4gdGltZSA+PSBuZXh0VGltZTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoIWluT3JkZXIpIHJldHVybiBbXCJTbyBjbG9zZSEgQnV0IHRoZSBuZXdlc3QgcG9zdCBzaG91bGQgYXBwZWFyIGF0IHRoZSB0b3BcIiwgJ25vdC1xdWl0ZS5naWYnLCBmYWxzZV07XG4gICAgICAgICAgICByZXR1cm4gW1wiUGFnZSBwb3B1bGF0ZWQgZnJvbSBJREIhXCIsIFwiMTkuZ2lmXCIsIHRydWVdO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sICgpID0+IHtcbiAgICAgICAgcmV0dXJuIFtcIkNvdWxkbid0IG9wZW4gdGhlICd3aXR0cicgZGF0YWJhc2UgYXQgYWxsIDooXCIsICdzYWQuZ2lmJywgZmFsc2VdO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sXG4gIFsnaWRiLWNsZWFuJ10oKSB7XG4gICAgcmV0dXJuIHJlbW90ZUV2YWwoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gb3BlbkRiKCd3aXR0cicpLnRoZW4oZGIgPT4ge1xuICAgICAgICBjb25zdCB0eCA9IGRiLnRyYW5zYWN0aW9uKCd3aXR0cnMnKTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSB0eC5vYmplY3RTdG9yZSgnd2l0dHJzJyk7XG5cbiAgICAgICAgcmV0dXJuIHN0b3JlLmNvdW50KCkudGhlbihudW0gPT4ge1xuICAgICAgICAgIGlmIChudW0gPiAzMCkge1xuICAgICAgICAgICAgcmV0dXJuIFtcIlRoZXJlIGFyZSBtb3JlIHRoYW4gMzAgaXRlbXMgaW4gdGhlIHN0b3JlXCIsICdub3BlLmdpZicsIGZhbHNlXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAobnVtIDwgMzApIHtcbiAgICAgICAgICAgIHJldHVybiBbXCJUaGVyZSBhcmUgbGVzcyB0aGFuIDMwIGl0ZW1zIGluIHRoZSBzdG9yZSwgc28gaXQgaXNuJ3QgY2xlYXIgaWYgdGhpcyBpcyB3b3JraW5nXCIsICdub3QtcXVpdGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBbXCJMb29rcyBsaWtlIHRoZSBkYXRhYmFzZSBpcyBiZWluZyBjbGVhbmVkIVwiLCBcIjIwLmdpZlwiLCB0cnVlXTtcbiAgICAgICAgfSk7XG4gICAgICB9LCAoKSA9PiB7XG4gICAgICAgIHJldHVybiBbXCJDb3VsZG4ndCBvcGVuIHRoZSAnd2l0dHInIGRhdGFiYXNlIGF0IGFsbCA6KFwiLCAnc2FkLmdpZicsIGZhbHNlXTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxuICBbJ2NhY2hlLXBob3RvcyddKCkge1xuICAgIHJldHVybiByZW1vdGVFdmFsKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGNhY2hlcy5oYXMoJ3dpdHRyLWNvbnRlbnQtaW1ncycpLnRoZW4oaGFzQ2FjaGUgPT4ge1xuICAgICAgICBpZiAoIWhhc0NhY2hlKSByZXR1cm4gW1wiVGhlcmUgaXNuJ3QgYSAnd2l0dHItY29udGVudC1pbWdzJyBjYWNoZVwiLCAnc2FkLmdpZicsIGZhbHNlXTtcblxuICAgICAgICAvLyBjbGVhciBjYWNoZVxuICAgICAgICByZXR1cm4gY2FjaGVzLmRlbGV0ZSgnd2l0dHItY29udGVudC1pbWdzJykudGhlbigoKSA9PiB7XG4gICAgICAgICAgY29uc3QgaW1hZ2VVcmxTbWFsbCA9ICcvcGhvdG9zLzQtMzA4Ny0yOTE4OTQ5Nzk4LTg2NWYxMzRlZjMtMzIwcHguanBnJztcbiAgICAgICAgICBjb25zdCBpbWFnZVVybE1lZGl1bSA9ICcvcGhvdG9zLzQtMzA4Ny0yOTE4OTQ5Nzk4LTg2NWYxMzRlZjMtNjQwcHguanBnJztcblxuICAgICAgICAgIHJldHVybiBmZXRjaChpbWFnZVVybE1lZGl1bSkudGhlbihtZWRSZXNwb25zZSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDIwMDApKVxuICAgICAgICAgICAgICAudGhlbigoKSA9PiBmZXRjaChpbWFnZVVybE1lZGl1bSkpLnRoZW4oYW5vdGhlck1lZFJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobWVkUmVzcG9uc2UuaGVhZGVycy5nZXQoJ0RhdGUnKSAhPSBhbm90aGVyTWVkUmVzcG9uc2UuaGVhZGVycy5nZXQoJ0RhdGUnKSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIGltYWdlcyBhcmUgYmVpbmcgcmV0dXJuZWQgZnJvbSB0aGUgY2FjaGVcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaChpbWFnZVVybFNtYWxsKS50aGVuKHNtYWxsUmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFtzbWFsbFJlc3BvbnNlLmJsb2IoKSwgbWVkUmVzcG9uc2UuYmxvYigpXSk7XG4gICAgICAgICAgICAgICAgfSkudGhlbihibG9icyA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoYmxvYnNbMF0uc2l6ZSAhPSBibG9ic1sxXS5zaXplKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJUaGUgb3JpZ2luYWxseSBjYWNoZWQgaW1hZ2UgaXNuJ3QgYmVpbmcgcmV0dXJuZWQgZm9yIGRpZmZlcmVudCBzaXplc1wiLCAnbm9wZS5naWYnLCBmYWxzZV07XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW1wiUGhvdG9zIGFyZSBiZWluZyBjYWNoZWQgYW5kIHNlcnZlZCBjb3JyZWN0bHkhXCIsIFwiMjEuZ2lmXCIsIHRydWVdO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgWydjYWNoZS1jbGVhbiddKCkge1xuICAgIHJldHVybiByZW1vdGVFdmFsKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGNhY2hlcy5vcGVuKCd3aXR0ci1jb250ZW50LWltZ3MnKS50aGVuKGNhY2hlID0+IHtcbiAgICAgICAgY29uc3QgaW1hZ2VVcmxNZWRpdW0gPSAnL3Bob3Rvcy80LTMwODctMjkxODk0OTc5OC04NjVmMTM0ZWYzLTY0MHB4LmpwZyc7XG5cbiAgICAgICAgcmV0dXJuIGZldGNoKGltYWdlVXJsTWVkaXVtKS50aGVuKHIgPT4gci5ibG9iKCkpLnRoZW4oKCkgPT4gbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDUwMCkpKS50aGVuKCgpID0+IHtcbiAgICAgICAgICByZXR1cm4gY2FjaGUubWF0Y2goJy9waG90b3MvNC0zMDg3LTI5MTg5NDk3OTgtODY1ZjEzNGVmMycpLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgaWYgKCFyZXNwb25zZSkgcmV0dXJuIFtcIlBob3RvcyBhcmVuJ3QgYXBwZWFyaW5nIGluIHRoZSBjYWNoZSB3aGVyZSB3ZSdkIGV4cGVjdFwiLCAnbm90LXF1aXRlLmdpZicsIGZhbHNlXTtcblxuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpO1xuXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiBjaGVja0NhY2hlKCkge1xuICAgICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIHN0YXJ0ID4gODAwMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXCJUaGUgaW1hZ2UgY2FjaGUgZG9lc24ndCBzZWVtIHRvIGJlIGdldHRpbmcgY2xlYW5lZFwiLCAnbm9wZS5naWYnLCBmYWxzZV07IFxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLm1hdGNoKCcvcGhvdG9zLzQtMzA4Ny0yOTE4OTQ5Nzk4LTg2NWYxMzRlZjMnKS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW1wiWWF5ISBUaGUgaW1hZ2UgY2FjaGUgaXMgYmVpbmcgY2xlYW5lZCFcIiwgJzIyLmdpZicsIHRydWVdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDEwMCkpLnRoZW4oY2hlY2tDYWNoZSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sXG4gIFsnY2FjaGUtYXZhdGFycyddKCkge1xuICAgIHJldHVybiByZW1vdGVFdmFsKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGNhY2hlcy5kZWxldGUoJ3dpdHRyLWNvbnRlbnQtaW1ncycpLnRoZW4oKCkgPT4ge1xuICAgICAgICBjb25zdCBpbWFnZVVybFNtYWxsID0gJy9hdmF0YXJzL21hcmMtMXguanBnJztcbiAgICAgICAgY29uc3QgaW1hZ2VVcmxNZWRpdW0gPSAnL2F2YXRhcnMvbWFyYy0yeC5qcGcnO1xuXG4gICAgICAgIHJldHVybiBmZXRjaChpbWFnZVVybFNtYWxsKS50aGVuKHNtYWxsUmVzcG9uc2UgPT4ge1xuICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyID0+IHNldFRpbWVvdXQociwgMjAwMCkpXG4gICAgICAgICAgICAudGhlbigoKSA9PiBmZXRjaChpbWFnZVVybE1lZGl1bSkpLnRoZW4obWVkUmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgICBpZiAoc21hbGxSZXNwb25zZS5oZWFkZXJzLmdldCgnRGF0ZScpICE9IG1lZFJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdEYXRlJykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW1wiRG9lc24ndCBsb29rIGxpa2UgYXZhdGFycyBhcmUgYmVpbmcgcmV0dXJuZWQgZnJvbSB0aGUgY2FjaGUsIGV2ZW4gaWYgdGhlIHJlcXVlc3QgaXMgZm9yIGEgZGlmZmVyZW50IHNpemVcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHIgPT4gc2V0VGltZW91dChyLCAyMDAwKSkudGhlbigoKSA9PiBmZXRjaChpbWFnZVVybE1lZGl1bSkpLnRoZW4oYW5vdGhlck1lZFJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobWVkUmVzcG9uc2UuaGVhZGVycy5nZXQoJ0RhdGUnKSA9PSBhbm90aGVyTWVkUmVzcG9uc2UuaGVhZGVycy5nZXQoJ0RhdGUnKSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIkRvZXNuJ3QgbG9vayBsaWtlIGF2YXRhcnMgYXJlIGJlaW5nIHVwZGF0ZWQgYWZ0ZXIgYmVpbmcgcmV0dXJuZWQgZnJvbSB0aGUgY2FjaGVcIiwgJ25vcGUuZ2lmJywgZmFsc2VdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gW1wiQXZhdGFycyBhcmUgYmVpbmcgY2FjaGVkLCBzZXJ2ZWQgYW5kIHVwZGF0ZWQgY29ycmVjdGx5IVwiLCBcIjIzLmdpZlwiLCB0cnVlXTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTsiLCJpbXBvcnQgcGFyc2VIVE1MIGZyb20gJy4uLy4uL3V0aWxzL3BhcnNlSFRNTCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwaW5uZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNvbnRhaW5lciA9IHBhcnNlSFRNTChcbiAgICAgICc8ZGl2IGNsYXNzPVwic3Bpbm5lclwiPicgK1xuICAgICAgICAnPGRpdiBjbGFzcz1cInNwaW5uZXItY29udGFpbmVyXCI+JyArXG4gICAgICAgICAgJzxkaXYgY2xhc3M9XCJzcGlubmVyLWxheWVyXCI+JyArXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNpcmNsZS1jbGlwcGVyIGxlZnRcIj4nICtcbiAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJjaXJjbGVcIj48L2Rpdj4nICtcbiAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZ2FwLXBhdGNoXCI+JyArXG4gICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2lyY2xlXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNpcmNsZS1jbGlwcGVyIHJpZ2h0XCI+JyArXG4gICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2lyY2xlXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAnPC9kaXY+JyArXG4gICAgICAnPC9kaXY+JyArXG4gICAgJycpLmZpcnN0Q2hpbGQ7XG5cbiAgICB0aGlzLl9zaG93VGltZW91dCA9IG51bGw7XG4gICAgdGhpcy5jb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgIHZhciBhbmltRW5kTGlzdGVuZXIgPSBldmVudCA9PiB7XG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ID09IHRoaXMuY29udGFpbmVyKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ3dlYmtpdEFuaW1hdGlvbkVuZCcsIGFuaW1FbmRMaXN0ZW5lcik7XG4gICAgdGhpcy5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgYW5pbUVuZExpc3RlbmVyKTtcbiAgfVxuXG4gIHNob3coZGVsYXkgPSAzMDApIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5fc2hvd1RpbWVvdXQpO1xuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnY29vbGRvd24nKTtcbiAgICB0aGlzLl9zaG93VGltZW91dCA9IHNldFRpbWVvdXQoXyA9PiB7XG4gICAgICB0aGlzLmNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgfSwgZGVsYXkpO1xuICB9XG5cbiAgaGlkZSgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5fc2hvd1RpbWVvdXQpO1xuICAgIHRoaXMuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Nvb2xkb3duJyk7XG4gIH1cbn1cbiIsInZhciBjb250ZXh0UmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuY29udGV4dFJhbmdlLnNldFN0YXJ0KGRvY3VtZW50LmJvZHksIDApO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdHJUb0VscyhzdHIpIHtcbiAgcmV0dXJuIGNvbnRleHRSYW5nZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQoc3RyKTtcbn0iXX0="}